{"_id":"0r70hVMU3xziJAC0","name":"Random Inspiration","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Courtesy of @Zarek\n// Selected target receives a random inspiration from a table called \"inspirations\".\n// You can find a table called inspirations in the community tables module\n\n// Setup variables\nlet tableName = \"Inspirations\";\n\nlet bardicInspiration = () => {\n  if (!actor) {\n    ui.notifications.warn(\"You must have an actor selected.\");\n    return\n  }\n\n  // Get Targets name\n  let actorLevels = actor.data.data.levels || 1;\n  const targetId = game.user.targets.ids[0];\n  const targetToken = canvas.tokens.get(targetId);\n  if (!targetToken) {\n    ui.notifications.warn(\"You must target a token.\");\n    return\n  }\n  const targetName = targetToken.name;\n\n\n  let table = game.tables.entities.find(t => t.name == tableName);\n\n  //default inspiration if no table is found.\n  //let inspiration = \"Cowards die many times before their deaths; the valiant never taste death but once.\";\n  let inspiration = `I don't know what effect ${targetName} will have upon the enemy, but, by God, he terrifies me.`;\n  \n  // Roll the result, and mark it drawn\n  if (table) {\n    if (checkTable(table)) {\n      // let result = table.roll()[1];\n      let roll = table.roll();\n      let result = roll.results[0];\n      inspiration = result.text;\n      table.updateEmbeddedEntity(\"TableResult\", {\n        _id: result._id,\n        drawn: true\n      });\n    }\n  }\n\n  function checkTable(table) {\n    let results = 0;\n    for (let data of table.data.results) {\n      if (!data.drawn) {\n        results++;\n      }\n    }\n    if (results < 1) {\n      table.reset();\n      ui.notifications.notify(\"Table Reset\")\n      return false\n    }\n    return true\n  }\n\n  let dieType = 'd6';\n  if (actorLevels >= 15) {\n    dieType = 'd12';\n  } else if (actorLevels >= 10) {\n    dieType = 'd10';\n  } else if (actorLevels >= 5) {\n    dieType = 'd8';\n  }\n\n  let messageContent = '';\n  messageContent += `<p>${token.name} exclaims <b><i>\"${inspiration}\"</i></b></p>`\n  messageContent += `<p>${targetName} is inspired.</p>`\n  messageContent += `<details closed=\"\"><summary><a>Bardic Inspiration</a></summary><p>${targetName} gains one Bardic Inspiration die, a <strong>${dieType}</strong>.<br>Once within the next 10 minutes, ${targetName} can roll the die and add the number rolled to one <b>ability check, attack roll, or saving throw</b>. ${targetName} can wait until after it rolls the <strong>d20</strong> before deciding to use the Bardic Inspiration die, but must decide before the DM says whether the roll succeeds or fails. Once the Bardic Inspiration die is rolled, it is lost.</p></details>`\n\n  // create the message\n  if (messageContent !== '') {\n    let chatData = {\n      user: game.user._id,\n      speaker: ChatMessage.getSpeaker(),\n      content: messageContent,\n    };\n    ChatMessage.create(chatData, {});\n  }\n};\nbardicInspiration();","folder":"76fmVesxjabFS6ZV","sort":3800001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"1q7q0bNOVOMEi6jO","name":"CAW_Store_Inventory","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"const build_characteristics = false;\n\n(async ()=>{\n  let [type, size] = await qDialog({\n    data : [\n      {type : `select`, label : `Store Type : `, options : [`Adventuring Supplies`,`Alchemist`,`Herbalist`,`Blacksmith`,`Armory`]},\n      {type : `select`, label : `Store Size : `, options : [`Small`, `Basic`,`Urban`,`Premium`]}\n    ],\n    title : `CAW Inventory Dialog`\n  });\n\n  let inventory = [];\n\n  Object.entries(items).forEach(([key,value])=>{\n    let avail = value.stores.find(i=>i.name === type);\n\n    if(avail && avail[size] !== 0)\n    {\n      let num = new Roll(avail[size]).roll().total;\n      if(num > 0)\n        inventory.push({name : key, cost : value.cost, weight : value.weight, units : num });\n    }\n  });\n\n  /*\n    Add total Gold\n    Roll Random Characteristics of the Shop/Shopkeep\n  */\n  let rand_char = [];\n\n  rand_char = Array(new Roll(`1d8+1`).roll().total).fill(0).forEach((r,i)=>{\n    if(!build_characteristics) return;\n\n    if(i === 0)\n    {\n      return `<tr><td style=\"width:10%\">Race : </td><td style=\"width:75%\">${(await getTableResult({name : `race`})).text}</td></tr>`\n    }else{\n      let {name, text} = getTableResult({name : `random`});\n      return `<tr><td style=\"width:10%\">${name.charAt(0).toUpperCase() + name.slice(1)} : </td><td style=\"width:75%\">${text}</td></tr>`\n    }\n  });\n\n  await wait(10*random_characteristics.length);\n\n  let content = `\n  ${\n    build_characteristics ? `<table>${random_characteristics.join(``)}</table>` : ``\n  }\n  <table>\n    <tr>\n      <th>Name</th>\n      <th>Cost</th>\n      <th>Weight</th>\n      <th>Units</th>\n    </tr>\n    ${inventory.map(({name,cost,weight,units})=> `<tr><td>${name}</td><td>${cost}</td><td>${weight}</td><td>${units}</td></tr>`).join(``)}\n  </table>`;\n\n  let journal = game.journal.getName(`${type} ${size}`);\n  if(journal) await journal.delete();\n\n  journal = await JournalEntry.create({ content , folder : ``, name : `${type} ${size}`});\n\n  //display journal\n})();\n\nasync function qDialog({data, title = `Quick Dialog`} = {})\n{\n  data = data instanceof Array ? data : [data];\n\n  let value = await new Promise((resolve) => {\n    let content = `\n    <table style=\"width:100%\">\n      ${data.map(({type, label, options}, i)=> {\n        if(type.toLowerCase() === `select`)\n        {\n          return `<tr><th style=\"width:50%\"><label>${label}</label></th><td style=\"width:50%\"><select id=\"${i}qd\">${options.map((e,i)=> `<option value=\"${e}\">${e}</option>`).join(``)}</td></tr>`;\n        }else if(type.toLowerCase() === `checkbox`){\n          return `<tr><th style=\"width:50%\"><label>${label}</label></th><td style=\"width:50%\"><input type=\"${type}\" id=\"${i}qd\" ${options || ``}/></td></tr>`;\n        }else{\n          return `<tr><th style=\"width:50%\"><label>${label}</label></th><td style=\"width:50%\"><input type=\"${type}\" id=\"${i}qd\" value=\"${options instanceof Array ? options[0] : options}\"/></td></tr>`;\n        }\n      }).join(``)}\n    </table>`;\n\n    new Dialog({\n      title, content,\n      buttons : {\n        Ok : { label : `Ok`, callback : (html) => {\n          resolve(Array(data.length).fill().map((e,i)=>{\n            let {type} = data[i];\n            if(type.toLowerCase() === `select`)\n            {\n              return html.find(`select#${i}qd`).val();\n            }else{\n              switch(type.toLowerCase())\n              {\n                case `text` :\n                case `password` :\n                case `radio` :\n                  return html.find(`input#${i}qd`)[0].value;\n                case `checkbox` :\n                  return html.find(`input#${i}qd`)[0].checked;\n                case `number` :\n                  return html.find(`input#${i}qd`)[0].valueAsNumber;\n              }\n            }\n          }));\n        }}\n      }\n    }).render(true);\n  });\n  return value;\n}\n\nfunction getTableResult({name  = ``} = {})\n{\n  const tableNames = {\n    eyes : `d20 Eyes: The person has...`,\n    ears : `d12 Ears: The person has...`,\n    mouth : `d10 Mouth: The person has...`,\n    nose : `d12 Nose: The person has...`,\n    chin : `d8 Chin or jaw: He/she has...`,\n    hair : `d20 Hair: The person has...`,\n    height : `d6 Height: The person is...`,\n    body : `d20 Body: The person’s body is...`,\n    hands : `d6 Hands: The person has...`,\n    scar : `d4 Scar: The person has...`,\n    tattoo : `d12 Tattoo: The person has...`,\n    clothes : `d8 Clothes: The person’s clothing is...`,\n    calm : `d32 Calm Trait: When calm, the person is typically...`,\n    stress : `d32 Stress Trait: When stressed, the person often becomes...`,\n    mood : `d20 Mood: Now, the person is...`,\n    faith : `d8 Faith: The person is a...`, \n    prejudice : `d6 Prejudice: The person is prejudice against...`,\n    flaw : `d20 Flaw: The person...`,\n    mannerism : `d50 Mannerisms`,\n    race : `d20 Race : The person's linage is...`\n  };\n\n  if(name === `random`) name = Object.keys(tableNames)[new Roll (`1d19-1`).roll().total];\n\n  let {text} = game.tables.getName(tableNames[name]).roll().results[0];\n\n  return { name, text };\n}\n\nasync function wait(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nconst available_gold = {\n  Small : 100, Basic : 200, Urban : 5000, Premium : 10000\n}\n\nconst items = {\n  //Armor\n  //Light\n  \"Padded Armor\" : \n  {\n    cost : `5 gp`,\n    weight : `8 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  //Medium\n  \"Chain Shirt\" : \n  {\n    cost : `10 gp`,\n    weight : `20 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n    ]\n  },\n  \"Scale Mail\" : \n  {\n    cost : `50 gp`,\n    weight : `45 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n    ]\n  },\n  \"Breastplate\" : \n  {\n    cost : `400 gp`,\n    weight : `20 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n    ]\n  },\n  \"Half plate\" : \n  {\n    cost : `750 gp`,\n    weight : `40 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n    ]\n  },\n  //Heavy\n  \"Ring Mail\" : \n  {\n    cost : `30 gp`,\n    weight : `40 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n    ]\n  },\n  \"Chain mail\" : \n  {\n    cost : `75 gp`,\n    weight : `55 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : `1d4`, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Split\" : \n  {\n    cost : `200 gp`,\n    weight : `60 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Plate\" : \n  {\n    cost : `1500 gp`,\n    weight : `65 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-2`, Premium : `1d4-1`},\n    ]\n  },\n  //Shield\n  \"Buckler\" : \n  {\n    cost : `8 gp`,\n    weight : `3 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : 0, Basic : `1d4`, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Shield\" : \n  {\n    cost : `10 gp`,\n    weight : `6 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Blacksmith`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n    ]\n  },\n  \"Tower Shield\" : \n  {\n    cost : `20 gp`,\n    weight : `30 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-2`, Premium : `1d4-1`},\n    ]\n  },\n  //Weapons\n  //Simple Melee Weapons\n  \"Dagger\" : \n  {\n    cost : `2 gp`,\n    weight : `1 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Blacksmith`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+4`},\n      { name : `Armory`, Small : `2d4`, Basic : `2d4+1`, Urban : `2d4+2`, Premium : `2d4+4`},\n    ]\n  },\n  \"Handaxe\" : \n  {\n    cost : `5 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Blacksmith`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+4`},\n      { name : `Armory`, Small : `2d4`, Basic : `2d4+1`, Urban : `2d4+2`, Premium : `2d4+4`},\n    ]\n  },\n  \"Quarterstaff\" : \n  {\n    cost : `2 sp`,\n    weight : `4 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Spear\" : \n  {\n    cost : `1 gp`,\n    weight : `3 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `1d4`, Basic : `2d4`, Urban : `2d4+1`, Premium : `2d4+2`},\n    ]\n  },\n  \"Javelin\" : \n  {\n    cost : `5 sp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `2d4-1`, Basic : `2d4`, Urban : `2d4+1`, Premium : `2d4+2`},\n    ]\n  },\n  \"Light hammer\" : \n  {\n    cost : `2 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n      { name : `Armory`, Small : `1d4-1`, Basic : `1d4-1`, Urban : `1d4-1`, Premium : `1d4-1`},\n    ]\n  },\n  \"Mace\" : \n  {\n    cost : `5 gp`,\n    weight : `4 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n \"Sickle\" : \n  {\n    cost : `1 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n      { name : `Armory`, Small : `1d4-1`, Basic : `1d4-1`, Urban : `1d4-1`, Premium : `1d4-1`},\n    ]\n  },\n  //Simple Ranged Weapons\n  \"Shortbow\" : \n  {\n    cost : `25 gp`,\n    weight : `5 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Crossbow, light\" : \n  {\n    cost : `25 gp`,\n    weight : `5 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : 0, Basic : `1d4`, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Dart\" : \n  {\n    cost : `5 cp`,\n    weight : `1/4 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4*3`},\n    ]\n  },\n  //Martial Melee Weapons\n  \"Longsword\" : \n  {\n    cost : `15 gp`,\n    weight : `3 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Blacksmith`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n    ]\n  },\n  \"Shortsword\" : \n  {\n    cost : `10 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Battleaxe\" : \n  {\n    cost : `10 gp`,\n    weight : `4 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Armory`, Small : 0, Basic : `1d4`, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Flail\" : \n  {\n    cost : `10 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n    ]\n  },\n  \"Glaive\" : \n  {\n    cost : `20 gp`,\n    weight : `6 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Armory`, Small : 0, Basic : `1d4`, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Greataxe\" : \n  {\n    cost : `30 gp`,\n    weight : `7 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n    ]\n  },\n  \"Greatsword\" : \n  {\n    cost : `50 gp`,\n    weight : `6 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n    ]\n  },\n  \"Halberd\" : \n  {\n    cost : `20 gp`,\n    weight : `6 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n    ]\n  },\n  \"Lance\" : \n  {\n    cost : `10 gp`,\n    weight : `6 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4`},\n    ]\n  },\n  \"Maul\" : \n  {\n    cost : `10 gp`,\n    weight : `10 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n    ]\n  },\n  \"Morning Star\" : \n  {\n    cost : `15 gp`,\n    weight : `4 lb.`,\n    stores: [\n      { name : `Blacksmith`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Armory`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`},\n    ]\n  },\n  //Martial Ranged Weapons\n  \"Longbow\" : \n  {\n    cost : `50 gp`,\n    weight : `2 lb.`,\n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Net\" : \n  {\n    cost : `1 gp`,\n    weight : `3 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  //Ammunition\n  \"Arrows\" : \n  {\n    cost : `1 gp`,\n    weight : `1 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Arrows, Acid (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Bolts, Acid (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Sling Bullets, Acid (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Arrows, Cold (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Bolts, Cold (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Sling Bullets, Cold (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Arrows, Fire (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Bolts, Fire (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Sling Bullet, Fire (5)\" : \n  {\n    cost : `2 gp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  //Item\n  \"Backpack\" : \n  {\n    cost : `2 gp`,\n    weight : `5 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Bedroll\" : \n  {\n    cost : `1 gp`,\n    weight : `7 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Map Case\" : \n  {\n    cost : `1 gp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Climber's Kit\" : \n  {\n    cost : `25 gp`,\n    weight : `12 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Clothes, Traveler's\" : \n  {\n    cost : `2 gp`,\n    weight : `4 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Crowbar\" : \n  {\n    cost : `2 gp`,\n    weight : `5 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Fishing Tackle\" : \n  {\n    cost : `1 gp`,\n    weight : `4 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Flask\" : \n  {\n    cost : `2 cp`,\n    weight : `1 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Alchemist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Herbalist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Grappling Hook\" : \n  {\n    cost : `2 gp`,\n    weight : `4 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Hammer\" : \n  {\n    cost : `1 gp`,\n    weight : `3 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Hammock\" : \n  {\n    cost : `5 gp`,\n    weight : `1 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Healer's Kit\" : \n  {\n    cost : `5 gp`,\n    weight : `3 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Herbalist`, Small : 0, Basic : `1d4-1`, Urban : `1d4+1`, Premium : `1d4+3`}\n    ]\n  },\n  \"Hunting Trap\" : \n  {\n    cost : `5 gp`,\n    weight : `25 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Lamp\" : \n  {\n    cost : `5 sp`,\n    weight : `1 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+3`}\n    ]\n  },\n  \"Lantern, Bullseye\" : \n  {\n    cost : `10 gp`,\n    weight : `2 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Lantern, Hooded\" : \n  {\n    cost : `5 gp`,\n    weight : `2 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Mess kit\" : \n  {\n    cost : `2 sp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Pick, Miner's\" : \n  {\n    cost : `2 gp`,\n    weight : `10 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Piton\" : \n  {\n    cost : `5 cp`,\n    weight : `1/4 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Pole\" : \n  {\n    cost : `5 cp`,\n    weight : `7 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Potion of Healing\" : \n  {\n    cost : `50 gp`,\n    weight : `1/2 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`},\n      { name : `Herbalist`, Small : 0, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+3`}\n    ]\n  },\n  \"Pouch\" : \n  {\n    cost : `5 sp`,\n    weight : `1 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Purification Kit\" : \n  {\n    cost : `5 gp`,\n    weight : `3 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`},\n      { name : `Herbalist`, Small : 0, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+4`},\n      { name : `Alchemist`, Small : 0, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+4`}\n    ]\n  },\n  \"Quiver\" : \n  {\n    cost : `1 gp`,\n    weight : `5 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Quiver Scabbard\" : \n  {\n    cost : `10 gp`,\n    weight : `2 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`}\n    ]\n  },\n  \"Rations\" : \n  {\n    cost : `5 sp`,\n    weight : `2 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Rope, Hempen\" : \n  {\n    cost : `1 gp`,\n    weight : `10 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+3`}\n    ]\n  },  \n  \"Rope, Silk\" : \n  {\n    cost : `10 gp`,\n    weight : `5 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Sack\" : \n  {\n    cost : `1 cp`,\n    weight : `1/2 lb.`, \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Shovel\" : \n  {\n    cost : `2 gp`,\n    weight : `5 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Signal Whistle\" : \n  {\n    cost : `5 cp`,\n    weight : ``,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Spyglass\" : \n  {\n    cost : `1000 gp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`}\n    ]\n  },\n  \"Tent, four-person\" : \n  {\n    cost : `4 gp`,\n    weight : `40 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Tent, two-person\" : \n  {\n    cost : `2 gp`,\n    weight : `20 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+3`}\n    ]\n  },\n  \"Tinderbox\" : \n  {\n    cost : `5 sp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Torch\" : \n  {\n    cost : `1 cp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Waterskin\" : \n  {\n    cost : `2 sp`,\n    weight : `5 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Whetstone\" : \n  {\n    cost : `1 cp`,\n    weight : `1 lb.`,   \n    stores: [\n      { name : `Adventuring Supplies`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+3`}\n    ]\n  },\n  \"Acid (vial)\" : \n  {\n    cost : `25 gp`,\n    weight : `1 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : `1d4-1`, Basic : `1d4x2`, Urban : `1d4x3`, Premium : `1d4x5`}\n    ]\n  },\n  \"Alchemist Fire (flask)\" : \n  {\n    cost : `50 gp`,\n    weight : `1 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : `1d4-1`, Urban : `1d4x2`, Premium : `1d4x5`}\n    ]\n  },\n  \"Antitoxin (vial)\" : \n  {\n    cost : `50 gp`,\n    weight : ``,   \n    stores: [\n      { name : `Alchemist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+3`, Premium : `1d4+5`},\n      { name : `Herbalist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Bottle, Glass\" : \n  {\n    cost : `2 gp`,\n    weight : `2 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : `1d4`, Basic : `1d4+2`, Urban : `1d4+3`, Premium : `1d4+5`},\n      { name : `Herbalist`, Small : `1d4`, Basic : `1d4+2`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Component Pouch\" : \n  {\n    cost : `25 gp`,\n    weight : `2 lb.`,   \n    stores: [\n      { name : `Herbalist`, Small : `1d4`, Basic : `1d4+2`, Urban : `1d4+3`, Premium : `1d4+5`}\n    ]\n  },\n  \"Oil (flask)\" : \n  {\n    cost : `1 sp`,\n    weight : `1 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : `1d4-1`, Urban : `1d4+1`, Premium : `1d4+3`},\n      { name : `Herbalist`, Small : 0, Basic : `1d4-1`, Urban : `1d4+1`, Premium : `1d4+3`}\n    ]\n  },\n  \"Perfume (vial)\" : \n  {\n    cost : `5 gp`,\n    weight : ``,   \n    stores: [\n      { name : `Herbalist`, Small : 0, Basic : 0, Urban : `1d4`, Premium : `1d4+2`}\n    ]\n  },\n  \"Poison, basic (vial)\" : \n  {\n    cost : `100 gp`,\n    weight : ``,   \n    stores: [\n      { name : `Herbalist`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Vial\" : \n  {\n    cost : `1 gp`,\n    weight : ``,   \n    stores: [\n      { name : `Herbalist`, Small : `1d4`, Basic : `1d4+2`, Urban : `1d4+4`, Premium : `1d4+5`},\n      { name : `Alchemist`, Small : `1d4`, Basic : `1d4+2`, Urban : `1d4+4`, Premium : `1d4+5`}\n    ]\n  },\n  //Tools\n  \"Cartographer's Tools\" : \n  {\n    cost : `15 gp`,\n    weight : `6 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Navigator's Tools\" : \n  {\n    cost : `25 gp`,\n    weight : `2 lb.`,   \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : 0, Urban : `1d4-1`, Premium : `1d4`}\n    ]\n  },\n  \"Alchemist's Tools\" : \n  {\n    cost : `50 gp`,\n    weight : `8 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : `1d4`, Urban : `1d4+2`, Premium : `1d4+3`}\n    ]\n  },\n  \"Herbalism Kit\" : \n  {\n    cost : `5 gp`,\n    weight : `3 lb.`,   \n    stores: [\n      { name : `Alchemist`, Small : 0, Basic : `1d4-1`, Urban : `1d4+1`, Premium : `1d4+2`},\n      { name : `Herbalist`, Small : 0, Basic : `1d4-1`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  //Tack, Harness\n  \"Bit and bridle\" : \n  {\n    cost : `2 gp`,\n    weight : `1 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  //Saddles\n  \"Saddle, Riding\" : \n  {\n    cost : `10 gp`,\n    weight : `25 lb.`,   \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  \"Saddlebags\" : \n  {\n    cost : `4 gp`,\n    weight : `8 lb.`,  \n    stores: [\n      { name : `Adventuring Supplies`, Small : 0, Basic : `1d4-1`, Urban : `1d4`, Premium : `1d4+1`}\n    ]\n  },\n  //Miscellaneous\n  \"Alchemical Reagents\" : \n  {\n    cost : `See Unit`,\n    weight : ``,  \n    stores: [\n      { name : `Alchemist`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n      { name : `Herbalist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n  \"Spell Components\" : \n  {\n    cost : `See Spell`,\n    weight : ``,  \n    stores: [\n      { name : `Herbalist`, Small : `1d4`, Basic : `1d4+1`, Urban : `1d4+2`, Premium : `1d4+3`},\n      { name : `Alchemist`, Small : `1d4-1`, Basic : `1d4`, Urban : `1d4+1`, Premium : `1d4+2`}\n    ]\n  },\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"4YBWNEbrNBESdQ80","name":"TRAP_Shift3","type":"script","author":"a2um1mRnicEx282I","img":"icons/weapons/swords/greatsword-crossguard-curved.webp","scope":"global","command":"game.macros.getName(\"TRAP_TeleportToToken\").execute(\"overhere\", 0, 0,0)\n\n//Change \"overhere\" to the token marking the location the player might end up. \n//Change the 0's change the positoning of the player in relation to the token. \n//Requires that you import the TeleportToToken first from DAE Sample Macros first.","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"50PkhUdle9FC54Jw","name":"Token Vision Configuration","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// A macro for the Foundry virtual tabletop that lets a user configure their token's vision and lighting settings. This script is taken from Sky's foundry repo here: https://github.com/Sky-Captain-13/foundry/blob/master/scriptMacros/tokenVision.js.\n\nlet applyChanges = false;\nnew Dialog({\n  title: `Token Vision Configuration`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Vision Type:</label>\n        <select id=\"vision-type\" name=\"vision-type\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"dim0\">Self</option>\n          <option value=\"dim30\">Darkvision (30 ft)</option>\n          <option value=\"dim60\">Darkvision (60 ft)</option>\n          <option value=\"dim90\">Darkvision (90 ft)</option>\n          <option value=\"dim120\">Darkvision (120 ft)</option>\n          <option value=\"dim150\">Darkvision (150 ft)</option>\n          <option value=\"dim180\">Darkvision (180 ft)</option>\n          <option value=\"bright120\">Devil's Sight (Warlock)</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Light Source:</label>\n        <select id=\"light-source\" name=\"light-source\">\n          <option value=\"nochange\">No Change</option>\n          <option value=\"none\">None</option>\n          <option value=\"candle\">Candle</option>\n          <option value=\"lamp\">Lamp</option>\n          <option value=\"bullseye\">Lantern (Bullseye)</option>\n          <option value=\"hooded-dim\">Lantern (Hooded - Dim)</option>\n          <option value=\"hooded-bright\">Lantern (Hooded - Bright)</option>\n          <option value=\"light\">Light (Cantrip)</option>\n          <option value=\"torch\">Torch</option>\n          <option value=\"moon-touched\">Moon-Touched</option>\n        </select>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: `Apply Changes`,\n      callback: () => applyChanges = true\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: `Cancel Changes`\n    },\n  },\n  default: \"yes\",\n  close: html => {\n    if (applyChanges) {\n      for ( let token of canvas.tokens.controlled ) {\n        let visionType = html.find('[name=\"vision-type\"]')[0].value || \"none\";\n        let lightSource = html.find('[name=\"light-source\"]')[0].value || \"none\";\n        let dimSight = 0;\n        let brightSight = 0;\n        let dimLight = 0;\n        let brightLight = 0;\n        let lightAngle = 360;\n        let lockRotation = token.data.lockRotation;\n        let lightAnimation = token.data.lightAnimation;\n        let lightAlpha = token.data.lightAlpha;\n        let lightColor = token.data.lightColor;\n        const colorFire = \"#f8c377\";\n        const colorWhite = \"#ffffff\";\n        const colorMoonGlow = \"#f4f1c9\";\n        // Get Vision Type Values\n        switch (visionType) {\n          case \"dim0\":\n            dimSight = 0;\n            brightSight = 0;\n            break;\n          case \"dim30\":\n            dimSight = 30;\n            brightSight = 0;\n            break;\n          case \"dim60\":\n            dimSight = 60;\n            brightSight = 0;\n            break;\n          case \"dim90\":\n            dimSight = 90;\n            brightSight = 0;\n            break;\n          case \"dim120\":\n            dimSight = 120;\n            brightSight = 0;\n            break;\n          case \"dim150\":\n            dimSight = 150;\n            brightSight = 0;\n            break;\n          case \"dim180\":\n            dimSight = 180;\n            brightSight = 0;\n            break;\n          case \"bright120\":\n            dimSight = 0;\n            brightSight= 120;\n            break;\n          case \"nochange\":\n          default:\n            dimSight = token.data.dimSight;\n            brightSight = token.data.brightSight;\n        }\n        // Get Light Source Values\n        switch (lightSource) {\n          case \"none\":\n            dimLight = 0;\n            brightLight = 0;\n            lightAnimation = {type: \"none\"};\n            break;\n          case \"candle\":\n            dimLight = 10;\n            brightLight = 5;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"lamp\":\n            dimLight = 45;\n            brightLight = 15;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"bullseye\":\n            dimLight = 120;\n            brightLight = 60;\n            lockRotation = false;\n            lightAngle = 52.5;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"hooded-dim\":\n            dimLight = 5;\n            brightLight = 0;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"hooded-bright\":\n            dimLight = 60;\n            brightLight = 30;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"light\":\n            dimLight = 40;\n            brightLight = 20;\n            lightAnimation = {type: \"none\"};\n            lightColor = colorWhite;\n            lightAlpha = 0.15;\n            break;\n          case \"torch\":\n            dimLight = 40;\n            brightLight = 20;\n            lightAnimation = {type: \"torch\", speed: 2, intensity: 2};\n            lightColor = colorFire;\n            lightAlpha = 0.15;\n            break;\n          case \"moon-touched\":\n            dimLight = 30;\n            brightLight = 15;\n            lightAnimation = {type: \"none\"};\n            lightColor = colorMoonGlow;\n            break;\n          case \"nochange\":\n          default:\n            dimLight = token.data.dimLight;\n            brightLight = token.data.brightLight;\n            lightAngle = token.data.lightAngle;\n            lockRotation = token.data.lockRotation;\n            lightAnimation = token.data.lightAnimation;\n            lightAlpha = token.data.lightAlpha;\n            lightColor = token.data.lightColor;\n        }\n        // Update Token\n        console.log(token);\n        token.update({\n          vision: true,\n          dimSight: dimSight,\n          brightSight: brightSight,\n          dimLight: dimLight,\n          brightLight:  brightLight,\n          lightAngle: lightAngle,\n          lockRotation: lockRotation,\n          lightAnimation: lightAnimation,\n          lightAlpha: lightAlpha,\n          lightColor: lightColor\n        });\n      }\n    }\n  }\n}).render(true);","folder":"76fmVesxjabFS6ZV","sort":5100001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"54pBFziyXAkWATIM","name":"Inspiring_Leadership","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/degen.svg","scope":"global","command":"let log =(...args) => console.log(\"Inspiring Leadership | \", ...args);\n(async () => {\n    //error checking\n    log(\"Starting Macro\");\n    if(game.user.character === null) return ui.notifications.warn(`You do not have a character.`);\n    if(game.user.targets.size <= 0 || game.user.targets.size >= 7) return ui.notifications.warn(`Target between 1 and 6 tokens.`);    \n    if(game.user.character.items.find(i=>i.name===\"Inspiring Leader\") === null) return ui.notifications.warn (`You do not have Inspiring Leadership.`);\n    if(game.macros.find(i=>i.name===\"Call_New\") === null) return ui.notifications.warn(`Call Macro Uninstalled`);\n    if(!game.modules.get(\"furnace\").active) return ui.notifications.warn(`The Furnace is not installed/enabled.`);\n    //variable calls\n    let targets = game.user.targets;\n    let myActor = game.user.character;\n    let callMacro = game.macros.find(i=>i.name===\"Call_New\");\n    let tempHP = myActor.data.data.abilities.cha.mod + myActor.data.data.details.level;\n    let tempActorUpdate = { newData : { data : { attributes :{ hp :{ temp : tempHP }, }, }, }, };\n    dnd5e.documents.macro.rollItem(\"Inspiring Leader\").then(() => {\n        for(let token of targets)\n        {\n            if(token.actor.data.data.attributes.hp.temp <= tempHP)\n            {\n                callMacro.execute(token.actor,\"\",\"\",tempActorUpdate);\n            }\n        }\n    });\n})();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1678987796103,"lastModifiedBy":"a2um1mRnicEx282I"}}
{"_id":"5pvzTl86MI0LMwYz","name":"Attempt to Migrate Conditional Visiblity Foundry 0.6 to 0.7","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Attempts to remove statusEffects set in Foundry 06 and applies the equivalent effect for Foundry 0.7\n\nlet update0607ConvisMatches = {\n\t'modules/conditional-visibility/icons/unknown.svg': 'invisible',\n\t'modules/conditional-visibility/icons/newspaper.svg': 'hiding',\n\t'modules/conditional-visibility/icons/foggy.svg': 'obscured',\n\t'modules/conditional-visibility/icons/moon.svg': 'indarkness'\n}\n\nconst popper = async function(token, effects) {\n\tawait effects.reduce(async (promise, eff) => {\n\t\tawait promise;\n\t\tif (eff.endsWith('newspaper.svg')) {\n\t\t\tconsole.info('Migrating 0.6->0.7 hiding for ' + token.data.name);\n\t\t\ttoken.data.effects.splice(token.data.effects.indexOf(eff), 1);\n\t\t\tconst ste = token.data?.flags['conditional-visibility']?._ste;\n\t\t\tif (ste) {\n\t\t\t\tawait ConditionalVisibility.hide([token], ste);\n\t\t\t} else {\n\t\t\t\tawait ConditionalVisibility.hide([token]);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.info('Migrating 0.6->0.7 ' + update0607ConvisMatches[eff] + ' for ' + token.data.name);\n\t\t\ttoken.data.effects.splice(token.data.effects.indexOf(eff), 1);\n\t\t\tawait ConditionalVisibility.setCondition([token], update0607ConvisMatches[eff], true);\n\t\t}\n\t}, Promise.resolve());\n}\n\nfor (const token of canvas.tokens.placeables) {\n\tif (token.data.effects.length > 0) {\n\t\tconst name = token.data.name;\n\t\tconst effectsToToggle = token.data.effects.filter(eff => {\n\t\t\tlet toCheck;\n\t\t\tif (typeof eff === 'string') {\n\t\t\t\ttoCheck = eff;\n\t\t\t} else {\n\t\t\t\ttoCheck = eff.icon;\n\t\t\t}\n\t\t\treturn toCheck && update0607ConvisMatches[toCheck] !== undefined;\n\t\t});\n\t\tpopper(token, effectsToToggle);\n\t};\n}","folder":"76fmVesxjabFS6ZV","sort":100017,"flags":{},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"6FVhHM4i1yUddi1C","name":"Stast Block","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/angel.svg","scope":"global","command":"(()=>{\n  let statString = `4d6r<3kh3`;\n  let stats = Array(6).fill(0).map(e=>new Roll(statString).roll()).sort((a,b)=>{return b.total-a.total});\n  \n  let total_average = 0, total_low = 0, total_high = 0, total_header = 0, average_kept = -1, average_change = 0;\n\n  average_kept = average(stats.map(x=> x.terms[0].results.filter(i=> i?.discarded !== true && i?.rerolled !== true).length));\n  average_change = average(stats.map(x=> x.terms[0].results.filter(i=>i?.discarded === true || i?.rerolled === true).length));\n  \n  total_average = (((stats[0].terms[0].faces/2) + 0.5) * average_kept) + average_change;\n  total_low = Math.ceil(total_average - (stats[0].terms[0].faces/2));\n  total_high = Math.ceil(total_average + (stats[0].terms[0].faces/2));\n\n  total_header = Math.max(...stats.map(x=> x.terms[0].results.length));\n\n  let content = `\n  <table style=\"text-align:center\">\n    <tr>\n      <th colspan=\"${total_header + 2}\">New Ability Scores</th>\n    </tr>\n    <tr style=\"border-bottom:1px solid #000\">\n      <th colspan=\"${total_header + 2}\">${statString}</th>\n    </tr>\n    <tr style=\"border-bottom:1px solid #000\">\n      ${Array(total_header).fill(0).map((v,i)=> `<th>D${i+1}</th>`).join(``)}\n      <th style =\"border-left:1px solid #000\">Total</th>\n      <th style =\"border-left:1px solid #000\">Mod</th>\n    </tr>\n    ${stats.map((stat,stat_i)=> {\n\n      let return_value = `<tr>`;\n      return_value += Array(total_header).fill(0).map((v,i)=>\n      {\n        let roll = stat.terms[0].results[i]?.result;\n        let discard = stat.terms[0].results[i]?.discarded;\n        let rerolled = stat.terms[0].results[i]?.rerolled;\n\n        if(roll)\n        {\n          if(discard) return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}-d</td>`;\n          if(rerolled) return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}-r</td>`;\n\n          return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}</td>`;\n        }else{\n          return `<td></td>`;\n        }\n      }).join(``)\n\n      return return_value += `<td style=\"border-left:1px solid #000; ${colorSetter(stat.total,total_low,total_high)}\">${stat.total}</td><td style=\"border-left:1px solid #000; ${colorSetter(Math.floor((stat.total-10)/2),-1,1)}\">${Math.floor((stat.total-10)/2)}</td></tr>`\n    }).join(``)}\n    <tr>\n      <td colspan=\"${total_header}\" style=\"border-top:1px solid #000;\"> Sum : </td>\n      <td style=\"border-left:1px solid #000; border-top:1px solid #000;\">${stats.reduce((a,c,i)=> a+c.total,0)}</td>\n      <td style=\"border-left:1px solid #000; border-top:1px solid #000;\">${stats.reduce((a,c,i)=> a+(Math.floor((c.total-10)/2)),0)}</td>\n    </tr>\n  </table>\n  `;\n\n  ChatMessage.create({content});\n})();\n\nfunction colorSetter(number,low,high)\n{\n  if(number <= low) return `color:red`;\n  if(number >= high) return `color:green`;\n  return ``;\n}\n\nfunction average(nums)\n{\n  return nums.reduce((a,b) => (a+b))/nums.length;\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3,"WO0LexLepslNlLuN":3,"xg50bX75wmYCfpRi":3,"XKhHN1g0i24DVtty":3,"boe55NUYS6C4R3VJ":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"6Y9nlHWSLsoYQBH1","name":"New Macro","type":"chat","author":"xg50bX75wmYCfpRi","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{},"ownership":{"default":0,"xg50bX75wmYCfpRi":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"78GUfYDlObMSa4on","name":"Guidance","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// new build for guidance macro by Mr.White and Penguin#0949 and with no help all of Kotetsushin#7680 trust me \n// Edited by DrWiFi to roll guidance on skill checks as well, removed references to bless spell\n// version beta 3.1.1 for workgroups .2\n\n// user notes\n// this macro is intended for use by the recipient of the guidance spell in D&D 5e on Forge VTT\n// N.B. every recipient will need to use this macro independently on their own Actor/token.\n\n//user modifiable declarations CHANGE AT YOUR OWN RISK\nconst guidanceIconPath = 'icons/svg/windmill.svg';\nlet guidanceMsg = ' is guided!';\nlet endguidanceMsg = ' is no longer guided.';\n\n//fixed declarations DO NOT MODIFY\nlet Guidd4 = '+1d4';\nlet guided = '';\nlet chatMsg = '';\nlet macroActor = actor;\nlet macroToken = token;\n\n//identify token\nif (macroToken === undefined || macroToken === null) {\n  ui.notifications.warn(\"Please select a token first.\");\n} else {\n// grab curent global states\n\tlet abilities = JSON.parse(JSON.stringify(macroActor.data.data.bonuses.abilities.check));\n\tlet skills = JSON.parse(JSON.stringify(macroActor.data.data.bonuses.abilities.skill));\n\tif(abilities.includes(Guidd4)){\n\t\tguided = true;\n\t}\n// If not already guided\t\n\tif (guided == false || guided === null || guided === undefined || guided == \"\") {\t\n// toggle guidance icon\n\t\tmacroToken.toggleEffect(guidanceIconPath);  \n// anounce to chat\n\t\tchatMsg = `${macroActor.name} ${guidanceMsg}`;\n// add guidance bonus\n\t\tconsole.log('adding guidance modifiers to global bonuses');\n\t\tlet obj = {};\n\t\tobj['data.bonuses.abilities.check'] = abilities + Guidd4;\n\t\tobj['data.bonuses.abilities.skill'] = skills + Guidd4;\n\t\tmacroActor.update(obj);\n// if already guided\t\n\t}\telse if (guided == true) {\n// toggle guidance icon\n\t\ttoken.toggleEffect(guidanceIconPath);  \t\t\n// anounce to chat\n\t\tchatMsg = `${macroActor.name} ${endguidanceMsg}`;\n// remove guidance bonus\n\t\tconsole.log('resetting global bonuses for guidance');\n\t\tlet obj = {};\n\t\tvar tmp = JSON.parse(JSON.stringify(macroActor.data.data.bonuses.abilities.check));\n\t\tvar tmpLength = tmp.indexOf(Guidd4);\n        tmp = tmp.substring(0, tmpLength) + tmp.substring(tmpLength+4, tmp.length);\n\t\tobj['data.bonuses.abilities.check'] = tmp;\n\t\tvar tmp = JSON.parse(JSON.stringify(macroActor.data.data.bonuses.abilities.skill));\n\t\tvar tmpLength = tmp.indexOf(Guidd4);\n        tmp = tmp.substring(0, tmpLength) + tmp.substring(tmpLength+4, tmp.length);\n\t\tobj['data.bonuses.abilities.skill'] = tmp;\n\t\tmacroActor.update(obj);\n\t}\n}\n  \t\n// write to chat if needed:\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n\t};\n\tChatMessage.create(chatData, {});\n}","folder":"76fmVesxjabFS6ZV","sort":3200001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"7gPH2laHvykkOhcd","name":"TRAP_TeleportToToken","type":"script","author":"a2um1mRnicEx282I","img":"icons/weapons/swords/greatsword-crossguard-blue.webp","scope":"global","command":"let targetScene;\nlet token2 = Array.from(game.user.targets)[0]\n\nif (!token2) return ChatMessage.create({content: `No token targeted`})\nfor (let scene of game.scenes.entities) {\n  var targetToken = scene.data.tokens.find(t => t.name === args[0]);\n  if (targetToken) {\n   targetScene = scene;\n   break;\n  }\n}\nif (!targetScene) return ChatMessage.create({content: `Could not find token ${args[0]} in any scene`});\nCanvasAnimation.terminateAnimation(`Token.${token2.id}.animateMovement`);\n\nlet x = targetToken.x + targetScene.data.grid * (args[1] || 0);\nlet y = targetToken.y + targetScene.data.grid * (args[2] || 0);\nlet startScene = canvas.scene.id;\n\nawait game.macros.getName(\"createToken\")?.execute(targetScene.id, x, y, token2.data)\nif(targetScene.id === startScene) {\n  await game.macros.getName(\"deleteToken\")?.execute(startScene, token2.id)\n} else {\n  Hooks.once(\"canvasReady\", () => {\n    game.macros.getName(\"deleteToken\")?.execute(startScene, token2.id)\n  })\n  await targetScene.view();\n}\ncanvas.pan(x,y)\n\n// This macro is intended to be used with Trigger Happy and requires Furnace advanced macros to run.\n// Sample trigger happy setup.\n// You must place two tokens on some scene(s). They must have unqiue name (not actor name, but token name).\n// @Token[Target1] @Trigger[move capture] @ChatMessage[/TeleportToToken Target2 -1 1]\n// The sample will, when a player moves their token over the target token \"Target1\", \n// delete the players token and recreate it next to the token named Target2\n// For the example above the players token will be placed 1 grid unit to the left of Target2 and one grid unit down from Target2","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"8EYbgKkIV6VQrW6O","name":"Review contributions","type":"script","author":"a2um1mRnicEx282I","img":"modules/data-toolbox/icons/bookmarklet.png","scope":"global","command":"LetsContribute.showReviewerUI()","folder":"76fmVesxjabFS6ZV","sort":4900001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"FgnRmbsZ0zuxNbBw":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"8EnkNvBRtb44nbgx","name":"Stop All Playlists","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/deaf.svg","scope":"global","command":"(async function() {\n    for ( let p of game.playlists ) {\n        await p.stopAll();\n    }\n   \n})();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.3u29DmBZDHXFlPiE"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"A2xstwikV15juX3w","name":"Make Token Lootable","type":"script","author":"a2um1mRnicEx282I","img":"icons/commodities/currency/coin-embossed-gold-stag.webp","scope":"global","command":"// For the currently selected token, change their actor sheet to LootSheetNPC,\n// delete all Feat items, sets token Observer privs for players, and adds a treasure\n// overlay icon to the body. Asks for confirmation because of the deletions.\n\nlet d = new Dialog({\n  title: 'Loot Converter',\n  content: `Make ${token.name} lootable?`,\n  buttons: {\n    no: {\n      icon: '<i class=\"fas fa-ban\"></i>',\n      label: 'Cancel',\n    },\n    yes: {\n      icon: '<i class=\"fas fa-thumbs-up\"></i>',\n      label: 'Convert',\n      callback: (html) => {\n        main();\n      },\n    },\n  },\n  default: 'no',\n}).render(true);\n\nasync function main() {\n  if (token.actor.hasPlayerOwner) {\n    ui.notifications.warn('Cannot convert a player owned token to loot');\n    return;\n  }\n\n  let newItems = token.actor.data.items.filter((item) => {\n    if (item.type == 'weapon') {\n      return item.data.weaponType != 'natural';\n    }\n    if (item.type == 'equipment') {\n      if (!item.data.armor) return true;\n      return item.data.armor.type != 'natural';\n    }\n    return !['class', 'spell', 'feat'].includes(item.type);\n  });\n\n  let newCurrencyData = {};\n\n  if (typeof token.actor.data.data.currency.cp === 'number') {\n    newCurrencyData['data.currency'] = {\n      cp: { value: token.actor.data.data.currency.cp },\n      ep: { value: token.actor.data.data.currency.ep },\n      gp: { value: token.actor.data.data.currency.gp },\n      pp: { value: token.actor.data.data.currency.pp },\n      sp: { value: token.actor.data.data.currency.sp },\n    };\n  }\n  await token.actor.update(newCurrencyData);\n  await token.actor.setFlag('core', 'sheetClass', 'dnd5e.LootSheet5eNPC');\n  await token.update({\n    'actorData.permission.default': ENTITY_PERMISSIONS.OBSERVER,\n    overlayEffect: `icons/svg/chest.svg`,\n  });\n  await token.actor.update({ items: newItems });\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.teK782KanQGZs1TY"}},"ownership":{"default":0,"LqsOjvGNORiotzcI":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"A9Pw2QbLa1ZxYwPT","name":"TRAP_Trigger Happy","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//arguments required => args[0] === save type//////\n////////////////////////args[1] === save value/////\n////////////////////////args[2] === damage type////\n////////////////////////args[3] === roll String////\n////////////////////////args[4] === any effects////\n////////////////////////args[5] === limit//////////\n\nif(args[5] === \"once\")\n{\n    let invalid = false;\n    for(user of game.users)\n    {\n        if(invalid) return;\n        invalid = user.getFlag(`world`,`${args[0]}`) ? user.getFlag(`world`,`${args[0]}`) : false;\n    }\n    game.user.setFlag(`world`,`${args[0]}`,true);\n}\n\n\nlet originalRollMode = game.settings.get(\"core\",\"rollMode\");\ngame.settings.set(\"core\",\"rollMode\",\"gmroll\");\nif(Object.entries(game.dnd5e.config.skills).map(a=>a[0]).includes(args[0]))\n{\n    game.user.character.rollSkill(args[0]).then(()=>{\n        after();\n        game.settings.set(\"core\",\"rollMode\",originalRollMode);\n    });\n\n}else if(Object.entries(game.dnd5e.config.abilities).map(a=>a[0]).includes(args[0])){\n    game.user.character.rollAbilitySave(args[0]).then(() => {\n        after();\n        game.settings.set(\"core\",\"rollMode\",originalRollMode);\n    });\n}else {\n    return ui.notifications.error(`Save Type Error.`);\n}\n\nfunction after()\n{\n    let contentTemplate = `\n    <div>\n        <table>\n            <tr><th style=\"text-align:center\">DC ${args[1]} ${args[0]}</th></tr>\n            <tr>\n                <td style=\"text-align:center\">\n                    ${args[4]}\n                </td>\n            </tr>\n        </table>\n    </div>`;\n\n    try {\n        let damageRoll = new Roll(`${args[3]}`).roll();\n        contentTemplate += `\n            <table>\n                <tr>\n                    <td style=\"text-align:center\">\n                        ${damageRoll.formula}\n                    <td>\n                </tr>\n            </table>\n            <table>\n                <tr>\n                    <th style = \"text-align:center\">\n                        ${damageRoll.total}\n                    </th>\n                </tr>\n            </table>\n        </div>`;\n    }catch (error)\n    {\n        //console.log(error);\n    }\n\n    ChatMessage.create({\n        user : game.user._id,\n        content : contentTemplate,\n        whisper : game.users.entities.filter(u=>u.isGM).map(u=>u._id)\n    });\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"CxEnNAfsFHzh9xVo","name":"Show Token Actions","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/*\n* Requires: DND5e.\n* Provides a dialog showing all action-triggered equipment, prepared and at-will spells, feats, and consumables,\n* as well as passive feats. Hopefully makes triggering actions easier without needing the character sheet open\n* all the time.\n* WARNING: Very ugly.\n* author/blame: ^ and stick#0520\n* with enormous help on the button events (and no blame to be attributed to): Skimble#8601\n*/\n\nclass ActionDialog extends Application {\n    super(options){\n    }\n\n    activateListeners(html) {\n        super.activateListeners(html);\n        const buttons = html.find(\"button[class='show-action-button']\");\n        \n        if (buttons.length > 0)\n            buttons.on(\"click\", event => {this.openActionTab(event, html);});\n    }   \n      \n    openActionTab(event, html) {\n        // Declare all variables\n        var i, tabcontent, tablinks;\n      \n        // Get all elements with class=\"tabcontent\" and hide them\n        tabcontent = document.getElementsByClassName(\"show-action-category\");\n        for (let t of tabcontent) {\n          t.style.display = \"none\";\n        }\n      \n        // Get all elements with class=\"tablinks\" and remove the class \"active\"\n        tablinks = document.getElementsByClassName(\"show-action-button\");\n        for (let t of tablinks) {\n          t.className = t.className.replace(\" active\", \"\");\n        }\n      \n        // Show the current tab, and add an \"active\" class to the button that opened the tab\n        if (event.target.value == \"showActionAll\") {\n            tabcontent = document.getElementsByClassName(\"show-action-category\");\n            for (let t of tabcontent) {\n                t.style.display= \"block\";\n            }\n        } else {\n            if (document.getElementById(event.target.value) != null)\n                document.getElementById(event.target.value).style.display = \"block\";\n        }\n        event.currentTarget.className += \" active\";\n    } \n\n    getData(){\n        // Get user's character or the first token from the controlled list.\n        function getTargetActor() {\n            const character = game.user.character;\n            if (character != null)\n                return character;\n\n            const controlled = canvas.tokens.controlled;\n\n            if (controlled.length === 0) return character || null;\n\n            if (controlled.length > 0 && controlled[0] != null) {\n                return controlled[0].actor;\n            }\n        }\n\n        function buildActionsList(targetActor) {\n            let equipped = targetActor.data.items.filter(i => i.type !=\"consumable\" && i.data.equipped);\n            let activeEquipped = getActiveEquipment(equipped);\n            let weapons = activeEquipped.filter(i => i.type == \"weapon\");\n            let equipment = activeEquipped.filter(i => i.type == \"equipment\");\n\n            let other = activeEquipped.filter(i => i.type != \"weapon\" && i.type != \"equipment\");\n            let consumables = targetActor.data.items.filter(i => i.type == \"consumable\");\n            let items = { \"weapons\": weapons, \"equipment\": equipment, \"other\": other, \"consumables\": consumables };\n\n            let preparedSpells = targetActor.data.items.filter(i => i.type == \"spell\" && i.data.preparation.prepared);\n            let spells = categoriseSpells(preparedSpells);\n\n            let allFeats = targetActor.data.items.filter(i => i.type == \"feat\");\n            let activeFeats = getActiveFeats(allFeats);\n            let passiveFeats =  getPassiveFeats(allFeats);\n            let feats = {\"active\": activeFeats, \"passive\": passiveFeats};\n            \n\n            return { \"equipment\": items,\"spells\": spells, \"feats\": feats };\n        }\n\n        function getActiveEquipment(equipment) {\n            const activationTypes = Object.entries(game.dnd5e.config.abilityActivationTypes);\n\n            let activeEquipment = equipment.filter(e => {\n                if (e.data.activation == undefined)\n                    return false;\n\n                for (let [key, value] of activationTypes) {\n                    if (e.data.activation.type == key)\n                        return true;\n                }\n                \n                return false;\n            });\n\n            return activeEquipment;\n        }\n\n        function categoriseSpells(spells) {\n            let powers = {};\n            let book = {}\n\n            book = spells.reduce(function (book, spell) {\n                var level = spell.data.level;\n                let prep = spell.data.preparation.mode;\n\n                const prepTypes = game.dnd5e.config.spellPreparationModes;\n                let prepType = prepTypes[prep];\n\n                if (prep == \"pact\" || prep == \"atwill\" || prep == \"innate\") {\n                    if (!powers.hasOwnProperty(prepType)) {\n                        powers[prepTypes[prep]] = [];\n                    }\n\n                    powers[prepType].push(spell);\n                } else {\n                    if (!book.hasOwnProperty(level)) {\n                        book[level] = [];\n                    }\n\n                    book[level].push(spell);\n                }\n\n                return book;\n            }, {});\n            \n            return {\"book\": Object.entries(book), \"powers\": Object.entries(powers)};\n        }\n\n        function getActiveFeats(feats) {\n            const activationTypes = Object.entries(game.dnd5e.config.abilityActivationTypes);\n            let activeFeats = feats.filter(f => {\n                if (f.data.activation == undefined)\n                    return false;\n\n                for (let [key, value] of activationTypes) {\n                    if (f.data.activation.type == key)\n                        return true;\n                }\n                \n                return false;\n            });\n\n            return Object.entries(activeFeats);\n        }\n\n        function getPassiveFeats(feats) {\n            const activationTypes = Object.entries(game.dnd5e.config.abilityActivationTypes);\n            let passiveFeats = feats.filter(f => {\n                if (f.data.activation == undefined)\n                    return false;\n\n                for (let [key, value] of activationTypes) {\n                    if (f.data.activation.type == key)\n                        return false;\n                }\n                \n                return true;\n            });\n\n            return Object.entries(passiveFeats);\n        }\n\n        function getContentTemplate(actions) {\n            let template = `\n            <div>\n                 ${getCssStyle()}\n                <div class=\"show-action-form-group\">\n                    <div class=\"show-action-buttons\">\n                        <button value=\"showActionItems\" class=\"show-action-button\">Items</button>\n                        <button value=\"showActionSpells\" class=\"show-action-button\">Spells</button>\n                        <button value=\"showActionFeats\" class=\"show-action-button\">Feats</button>\n                        <button value=\"showActionAll\" class=\"show-action-button\">Show all</button>\n                    </div>\n                    </div>\n                    <div class=\"show-action-categories\">\n                        <div id=\"showActionItems\" class=\"show-action-category\">\n                            ${getItemsTemplate(actions.equipment)}\n                        </div>\n                        <div id=\"showActionSpells\" class=\"show-action-category\">\n                            ${getSpellsTemplate(actions.spells)}\n                        <div id=\"showActionFeats\" class=\"show-action-category\">\n                            ${getFeatsTemplate(actions.feats)}\n                        </div>\n                    </div>\n                </div>\n            </div>`;\n            \n            return template;\n        }\n\n                // Gets a template of abilities or skills, based on the type of check chosen.\n        function getItemsTemplate(items) {\n            if (items.weapons.length + items.equipment.length + items.other.length + items.consumables.length === 0)\n                return \"\";\n\n            let template = `<div id=\"actionItems\" class=\"show-action-tabcontent\">\n                                <div class=\"show-action-tabcontent-title\">Items</div>\n                                    ${getItemsCategoryTemplate(\"Weapons\", items.weapons)}\n                                    ${getItemsCategoryTemplate(\"Equipment\", items.equipment)}\n                                    ${getItemsCategoryTemplate(\"Other\", items.other)}\n                                    ${getItemsCategoryTemplate(\"Consumables\", items.consumables)}\n                                </div>\n                            </div>`;\n\n            return template;\n        }\n\n        function getSpellsTemplate(spells) {                \n            let template = `<div id=\"actionSpells\" class=\"show-action-tabcontent\">\n                                <div class=\"show-action-tabcontent-title\">Spells</div>\n                                    ${getSpellsCategoryTemplate(spells.powers)}\n                                    ${getSpellsCategoryTemplate(spells.book)}\n                                </div>\n                            </div>`;\n\n            return template;\n        }\n        \n        function getFeatsTemplate(feats) {\n            if (feats.active.length + feats.passive.length === 0)\n                return \"\";\n\n            let template = `<div id=\"actionFeats\" class=\"show-action-tabcontent\">\n                                <div class=\"show-action-tabcontent-title\">Feats</div>\n                                    ${getFeatsCategoryTemplate(\"Active\", feats.active)}\n                                    ${getFeatsCategoryTemplate(\"Passive\", feats.passive)}\n                                </div>\n                            </div>`;\n\n            return template;\n        }\n\n        function getItemsCategoryTemplate(title, items) {\n            if (items.length === 0)\n                return \"\";\n\n            let template = `<div class=\"show-action-tabcontent-subtitle\">${title}</div>\n                            <div class=\"show-action-tabcontent-actions\">`;\n            for (let i of items) {\n                template += `<input id=\"weapon-${i.name}\" type=\"button\" value=\"${i.name}\" onclick=\"${getRollItemMacro(i.name)}\"/>`;    \n            } \n\n            template += `</div>`;\n\n            return template;\n        }\n\n        function getSpellsCategoryTemplate(spells) {\n            if (spells.length === 0)\n                return \"\";\n\n            let template = \"\";\n\n            for (let [level, entries] of spells) {\n                console.log(isNumber(level.toString()));\n                let subtitle = !isNumber(level) ? level : (level === 0 ? `Cantrips` : `Level ${level}`);\n\n                template += `<div class=\"show-action-tabcontent-subtitle\">${subtitle}</div>\n                                <div class=\"show-action-tabcontent-actions\">`;\n        \n                for (let s of entries) {\n                    template += `<input id=\"spell-${s.name}\" type=\"button\" value=\"${s.name}\" onclick=\"${getRollItemMacro(s.name)}\"/>`;    \n                }\n    \n                template += `</div>`;\n            }\n            \n            return template;\n        }\n\n        function getFeatsCategoryTemplate(subtitle, feats) {\n            if (feats.length === 0)\n                return \"\";\n            \n            let template = `<div class=\"show-action-tabcontent-subtitle\">${subtitle}</div>\n                            <div class=\"show-action-tabcontent-actions\">`\n                            \n            for (let [index, f] of feats) {\n                template += `<input id=\"feat-${f.name}\" type=\"button\" value=\"${f.name}\" onclick=\"${getRollItemMacro(f.name)}\"/>`;    \n            }\n\n            template += `</div>`\n            \n\n            return template;\n        }\n\n        function getCssStyle() {\n            return `\n            <style type=\"text/css\">\n            .show-action-buttons {\n                display: grid;\n                grid-template-columns: repeat(5, 1fr);\n                grid-gap: 10px;\n            }\n\n            .show-action-buttons button {\n                width: auto;\n                height: auto;\n                background-color: #eee;\n                float: left;\n                border: none;\n                outline: none;\n                cursor: pointer;\n                padding: 5px 8px;\n                transition: 0.3s;\n                display: block;\n              }\n                            \n              /* Change background color of buttons on hover */\n              .show-action-buttons button:hover {\n                background-color: #ddd;\n              }\n              \n              /* Create an active/current tablink class */\n              .show-action-buttons button.active {\n                background-color: #ccc;\n              }\n\n              .show-action-categories {\n                clear: both;\n              }\n              \n              /* Style the tab content */\n              .show-action-tabcontent {\n                display: block;\n                padding: 6px 12px;\n                border: 1px solid #ccc;\n                border-bottom: none;\n                border-left: none;\n                border-right: none;\n              }\n\n              .show-action-tabcontent-title {\n                    clear: both;\n                    font-size: large;\n              }\n\n              .show-action-tabcontent-subtitle {\n                  padding: 5px;\n                  margin: 2px;\n                  float: left;\n              }\n\n              .show-action-tabcontent input {\n                border: 1px solid #555;\n                padding: 5px;\n                margin: 2px;\n              }\n              \n              .show-action-tabcontent input:hover {\n              background-color: #ddd;\n              }\n            </style>`\n        }\n\n        function getRollItemMacro(itemName) {\n            return `dnd5e.documents.macro.rollItem(&quot;${itemName}&quot;)`;\n        }\n\n        // set this to true if you want results whispered to the GM\n        let targetActor = getTargetActor();\n        let innerContent = \"\";\n\n        if (targetActor != null || targetActor) {\n            this.options.title = `${targetActor.name} actions`;\n            let actionLists = buildActionsList(targetActor);\n            innerContent = getContentTemplate(actionLists);\n        } else {\n            ui.notifications.error(\"No token selected or user character found.\");\n            throw new Error(\"No token selected or character found\");\n        }\n        \n        var content =  `<div id=\"actionDialog\">${innerContent}</div>`;\n        var contentsObject = {content:`${content}`}\n        return contentsObject;\n    }\n}\n\nlet opt=Dialog.defaultOptions;\nopt.resizable=true;\nopt.title=\"Choose action\";\nopt.minimizable=true;\nopt.width=600;\nvar viewer;\nviewer = new ActionDialog(opt);\nviewer.render(true);","folder":"76fmVesxjabFS6ZV","sort":4200001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":"dnd5e","systemVersion":"2.1.5","coreVersion":"10.291","createdTime":null,"modifiedTime":1678987796117,"lastModifiedBy":"a2um1mRnicEx282I"}}
{"_id":"D0Cyq8ECrrJt666d","name":"Convert Selected Tokens to Loot","type":"script","author":"a2um1mRnicEx282I","img":"icons/containers/bags/coinpouch-simple-leather-silver-brown.webp","scope":"global","command":"const macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.convertSelectedTokensToLoot();","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{"core":{"sourceId":"Macro.uXaOY2ziotAvxdrg"},"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"FRluk9qbsNFzsRoC":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"DhSYcaNRkdqVkQJI","name":"Sharpshooter","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/*\nCreated Monkan#8752 with guidance from the Rage macro in the FVTT Community Macros\n\nTips to make it work\n 1 -    Have a feature called 'Sharpshooter' for your character.\n 2 -    Make sure you have your weapons with Ranged Weapon Attack. \n 3 -    if you make any changes to your damage or attack calculations, make sure you toggle it off.\n        As it stores the old values to replace once you disable the feat.  It could undo your changes.\n*/\n\nlet ss='';\nlet chatMsg='';\n\n\nif (actor !== undefined && actor !== null) {\n    // find the feat Sharpshooter\n    ss = actor.items.find(i => i.name === 'Sharpshooter');\n    if (ss == undefined) { \n        ui.notifications.warn(\"Please select a single token with the Sharpshooter feat.\");        \n    }\n\n    if (ss !== undefined && ss !== null) {\n\t\tchatMsg = '';\n\t\tlet enabled = false;\n\t\t// store the state of the Sharpshooter toggle in flags\n\t\tif (actor.data.flags.ssMacro !== null && actor.data.flags.ssMacro !== undefined) {\n\t\t\tenabled = true;\n\t\t}\n\t\t// if Sharpshooter is active, disable it\n\t\tif (enabled) {\n            chatMsg = `${actor.name} is aiming Normally now.`;\n            \n            let obj = {};\n\t\t\tobj['flags.ssMacro'] = null;\t\t\t\n\t\t\tactor.update(obj);\n\n\t\t\t// reset items\n\t\t\tfor (let item of actor.items) {\n\t\t\t\tif (item.data.flags.ssMacro !== null && item.data.flags.ssMacro !== undefined) {\n\t\t\t\t\t// restoring the old value from flags\n                    let oldDmg = item.data.flags.ssMacro.oldDmg;\n                    let oldAtk = item.data.flags.ssMacro.oldAtk;\n\t\t\t\t\tlet obj = {};\n                    obj['data.damage.parts'] = oldDmg;\n                    obj['data.attackBonus'] = oldAtk;\n\t\t\t\t\tobj['flags.ssMacro'] = null;\n\t\t\t\t\titem.update(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t// if Sharpshooter is disabled, enable it\n\t\t} else {\n            chatMsg = `${actor.name} is aiming very carefully!`;\n            \n            let obj = {};\n\t\t\tobj['flags.ssMacro.enabled'] = true;\n\t\t\tactor.update(obj);\n\n            // update items\n            let ssAtk = -5;\n\t\t\tlet ssDmg = 10;\n\t\t\tfor (let item of actor.items) {\n                let isRanged = getProperty(item, 'data.data.actionType') === 'rwak';                \n\t\t\t\tif (isRanged && item.data.data.damage.parts.length > 0) {\n\t\t\t\t\tconsole.log('updating ' + item);\n                    let obj = {};\n                    let atk = item.data.data.attackBonus;\n                    let dmg = item.data.data.damage.parts;\n                    // Save old attack and damage values\n                    obj['flags.ssMacro.oldDmg'] = JSON.parse(JSON.stringify(dmg));\n                    obj['flags.ssMacro.oldAtk'] = JSON.parse(JSON.stringify(atk));\n                    // Set the new attack and damage values\n                    if (atk !== null) {\n                        atk += '' + ssAtk;\n                    } else {\n                        atk = ssAtk;\n                    }\n\t\t\t\t\tdmg[0][0] = `${dmg[0][0]} + ${ssDmg}`;\n                    obj['data.damage.parts'] = dmg;\n                    obj['data.attackBonus'] = atk;\n\t\t\t\t\titem.update(obj);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n    }\n\n} else ui.notifications.warn(\"Please select a token.\");\n\n// write to chat if needed:\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n    };\n\tChatMessage.create(chatData, {});\n}","folder":"76fmVesxjabFS6ZV","sort":4100001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"DlzUn7tmFGbfCMmu","name":"Lingering_Injuries","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"(async ()=>{\n  let random_number = new Roll(`1d100`).roll().total;\n\n  let html = `\n  <div class=\"dnd5e chat-card item-card\">\n    <header class=\"card-header flexrow\">\n      <img src=\"https://wow.zamimg.com/images/wow/icons/large/ability_deathknight_brittlebones.jpg\" title=\"Lingering Injuries\" width=\"36\" height=\"36\" />\n      <h3 class=\"item-name\">Lingering Injuries</h3>\n    </header>\n\n    <div class=\"card-content\">\n    <div class=\"rd__b  rd__b--3\"><p>Damage normally leaves no lingering effects. This option introduces the potential for long-term injuries.</p></div>\n    </div>\n    \n    <button data-action=\"save\" data-ability=\"con\" id=\"LI-Save-Button-${random_number}\">\n        Saving Throw DC 15 Constitution\n    </button>\n  </div>`;\n\n  ChatMessage.create({content : html}).then((result)=>{\n    if(!result) return;\n\n    setTimeout( ()=>{\n      document.getElementById(`LI-Save-Button-${random_number}`).addEventListener(\"click\", ()=>\n      {\n        let target_actor = canvas.tokens.controlled[0];\n        if(!target_actor) return;\n    \n        target_actor.actor.rollAbilitySave(\"con\").then((result)=>{\n          if(!result) return;\n    \n          if(result.total < 15)\n          {\n            setTimeout (()=> {\n              ChatMessage.create({content : `You failed your roll!`});\n              game.tables.getName(\"Lingering Injuries\").draw();\n            }, 2000);\n          }\n        })\n      });\n    }, 1000);\n  });\n})();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"E0tkpn2z1cUKYZ9a","name":"Play Lost Whaler's Love","type":"script","author":"a2um1mRnicEx282I","img":"external_scenes/myJournals/porvenir/handouts/LostLoversWail.png","scope":"global","command":"(async function() {\n    for ( let p of game.playlists ) {\n        await p.stopAll();\n    }\n    const playlist = game.playlists.getName(\"The Secret of the Porvenir\");\n    const sound = playlist.sounds.find(s => s.name === \"Lost Whaler's Love Loop\");\n    playlist.updateEmbeddedEntity(\"PlaylistSound\", {_id: sound._id, playing: true});\n})();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.OJS745ECi8H47mNG"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"EGQYnEiBE6CyFzcs","name":"Lay On Hands","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/**\n * System: D&D5e\n * Apply lay-on-hands feat to a target character.  Asks the player how many HP to heal and\n * verifies the entered value is within range before marking down usage counter. If the player\n * has OWNER permissions of target (such as GM or self-heal) the HP are applied automatically; \n * otherwise, a 'roll' message appears allowing the target character to right-click to apply healing.\n */\n\nlet confirmed = false;\nlet actorData = actor || canvas.tokens.controlled[0] || game.user.character;\nlet featData = actorData ? actorData.items.find(i => i.name===\"Lay on Hands\") : null;\n\nif(actorData == null || featData == null) \n    ui.notifications.warn(`Selected hero must have \"Lay on Hands\" feat.`);\nelse if (game.user.targets.size !== 1)\n    ui.notifications.warn(`Please target one token.`);\nelse\n{\n    let featUpdate = duplicate(featData);\n    let targetActor = game.user.targets.values().next().value.actor;\n    let maxHeal = Math.clamped(featUpdate.data.uses.value, 0, \n        targetActor.data.data.attributes.hp.max - targetActor.data.data.attributes.hp.value);\n\n    let content = `<p><em>${actorData.name} lays hands on ${targetActor.data.name}.</em></p>\n                    <p>How many HP do you want to restore to ${targetActor.data.name}?</p>\n                    <form>\n                        <div class=\"form-group\">\n                            <label for=\"num\">HP to Restore: (Max = ${maxHeal})</label>\n                            <input id=\"num\" name=\"num\" type=\"number\" min=\"0\" max=\"${maxHeal}\"></input>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"flavor\">Flavor:</label>\n                            <input id=\"flavor\" name=\"flavor\" value=\"${featUpdate.data.chatFlavor}\"></input>\n                        </div>\n                    </form>`;\n    new Dialog({\n        title: \"Lay on Hands Healing\",\n        content: content,      \n        buttons: {\n            heal: { label: \"Heal!\", callback: () => confirmed = true },\n            cancel: { label: \"Cancel\", callback: () => confirmed = false }\n        },\n        default: \"heal\",\n\n        close: html => {\n            if (confirmed) \n            {\n                let number = Math.floor(Number(html.find('#num')[0].value));\n                if (number < 1 || number > maxHeal)\n                    ui.notifications.warn(`Invalid number of charges entered = ${number}. Aborting action.`);\n                else\n                {\n                    let flavor = `<strong>${html.find('#flavor')[0].value}</strong><br>`;\n                    if (targetActor.permission !== CONST.ENTITY_PERMISSIONS.OWNER)\n                        // We need help applying the healing, so make a roll message for right-click convenience.\n                        new Roll(`${number}`).roll().toMessage({\n                            speaker: ChatMessage.getSpeaker(),\n                            flavor: `${actorData.name} lays hands on ${targetActor.data.name}.<br>${flavor}\n                            <p><em>Manually apply ${number} HP of healing to ${targetActor.data.name}</em></p>` });\n                    else {\n                        // We can apply healing automatically, so just show a normal chat message.\n                        ChatMessage.create({\n                            speaker: ChatMessage.getSpeaker(),\n                            content: `${actorData.name} lays hands on ${targetActor.data.name} for ${number} HP.<br>${flavor}`\n                        });\n                        targetActor.update({\"data.attributes.hp.value\" : targetActor.data.data.attributes.hp.value + number});\n                    }\n\n                    featUpdate.data.uses.value = featUpdate.data.uses.value - number;\n                    actorData.updateEmbeddedEntity(\"OwnedItem\", featUpdate);\n                };\n            }\n        }\n    }).render(true);\n}","folder":"76fmVesxjabFS6ZV","sort":3400001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"ENe8RDK3oA2EdRNL","name":"Monk Ki","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/**\n * Monk Ki Point spender\n * \n * This macro will prompt which Feature you want to spend Ki points on.\n * \n * Flurry of Blows: Automatically cast two Unarmed Strike's\n * Stunning Strike: Automatically show the saving throw DC\n * Deflect Missiles: Automatically show the damage reduction\n */\n(async () => {\n    const kiName = \"Ki Points\";\n    const errNoMonkToken = \"Please select a single monk token.\";\n\n    const sendChat = async (msg) => {\n        let chatData = {\n            user: game.user.id,\n            speaker: ChatMessage.getSpeaker(),\n            content: msg,\n        };\n        ChatMessage.create(chatData, {});\n    }\n\n    if (!actor) {\n        ui.notifications.warn(errNoMonkToken);\n        return\n    }\n\n    let monk = actor.items.find(i => i.name === 'Monk' && i.type === 'class');\n    if (!monk) {\n        ui.notifications.warn(errNoMonkToken);\n        return\n    }\n\n    let monkLevels = monk.data.data.levels || 20;\n    //let subClass = monk.data.data.subclass;\n\n    if (monkLevels < 2) {\n        ui.notifications.warn('You must have a least 2 Monk levels to use ki points.');\n        return\n    }\n\n    class KiFeature {\n        /**\n         * @param {string} name\n         * @param {string} fallbackText\n         * @param {number} requireLevel\n         * @param {function} action\n         * @param {function} appendTemplate\n         * @param {number} kiCost\n         */\n        constructor(name, fallbackText, requireLevel, action, appendTemplate, kiCost) {\n            this.name = name;\n            this.fallbackText = fallbackText;\n            this.requireLevel = requireLevel;\n            this.kiCost = kiCost || 1;\n            if (action) {\n                this.action = action;\n            }\n            if (appendTemplate) {\n                this.appendTemplate = appendTemplate;\n            }\n        }\n\n        render(allowHigher) {\n            let entry = null;\n\n            const pack = game.packs.get(\"dnd5e.classfeatures\");\n            if (!pack) {\n                console.warn('Could not find \"dnd5e.classfeatures\" compendium.');\n            } else {\n                entry = pack.index.find(e => e.name === this.name);\n            }\n\n            if (!allowHigher && this.requireLevel && monkLevels && this.requireLevel > monkLevels) {\n                ui.notifications.warn(`You need to have ${this.requireLevel} monk levels, you only have ${monkLevels}.`)\n                return\n            }\n\n            if (entry) {\n                pack.getEntity(entry._id).then(o => {\n                    let template = `@Compendium[dnd5e.classfeatures.${entry._id}]{${this.name}}\n                    ${o.data.data.description.value}`;\n                    if (this.appendTemplate) {\n                        template += '\\n\\n' + this.appendTemplate();\n                    }\n                    sendChat(template);\n                    if (this.action) {\n                        this.action();\n                    }\n                });\n            } else {\n                console.warn(`Could not find \"${this.name}\" entry in compendium.`);\n                let template = this.fallbackText;\n                if (this.appendTemplate) {\n                    template += '\\n\\n' + this.appendTemplate();\n                }\n                sendChat(template);\n                if (this.action) {\n                    this.action();\n                }\n            }\n        }\n    }\n\n   const openHand = !!actor.items.find(o => o.data.name === 'Open Hand Technique') ? `<br />In addition, you can impose one of the following: <ul><li>It must succeed on a <b>Dexterity</b> saving throw or be knocked prone.</li><li>It must make a <b>Strength</b> saving throw. If it fails, you can push it up to 15 feet away from you.</li><li>It can’t take reactions until the end of your next turn.</li></ul> Saving throw <b>DC ${10 + actor.data.data.abilities.wis.mod}</b>` : \"\";\n\n    const features = [\n        new KiFeature(\"Ki: Flurry of Blows\",\n            `Immediately after you take the <b>Attack</b> action on your turn, you can spend 1 ki point to make two unarmed strikes as a bonus action. ${openHand}`,\n            2,\n            function () {\n                // Automatically roll two Unarmed Strike attacks\n                let strike = actor.items.find(o => o.data.name === 'Unarmed Strike' && o.data.labels.activation === '1 Action')\n                if (strike) {\n                    strike.roll();\n                    strike.roll();\n                }\n            }),\n        new KiFeature(\"Ki: Patient Defense\",\n            \"You can spend 1 ki point to take the <b>Dodge</b> action as a bonus action on your turn.\",\n            2),\n        new KiFeature(\"Ki: Step of the Wind\",\n            \"You can spend 1 ki point to take the <b>Disengage</b> or <b>Dash</b> action as a bonus action on your turn, and your jump distance is doubled for the turn.\",\n            2),\n        new KiFeature(\"Deflect Missiles\",\n            `Starting at 3rd level, you can use your reaction to deflect or catch the missile when you are hit by a ranged weapon attack. When you do so, the damage you take from the attack is reduced by 1d10 + your Dexterity modifier + your monk level. <br />\n\n        If you reduce the damage to 0, you can catch the missile if it is small enough for you to hold in one hand and you have at least one hand free. If you catch a missile in this way, you can spend 1 ki point to make a ranged attack with the weapon or piece of ammunition you just caught, as part of the same reaction. You make this attack with proficiency, regardless of your weapon proficiencies, and the missile counts as a monk weapon for the attack, which has a normal range of 20 feet and a long range of 60 feet.`,\n            3,\n            null,\n            function () {\n                return `Damage reduction: [[/r 1d10+${actor.data.data.abilities.dex.mod}+${monkLevels}]]`;\n            }),\n        new KiFeature(\"Ki: Stunning Strike\",\n            \"Starting at 5th level, you can interfere with the flow of ki in an opponent’s body. When you hit another creature with a melee weapon attack, you can spend 1 ki point to attempt a stunning strike. The target must succeed on a Constitution saving throw or be <b>stunned</b> until the end of your next turn.\",\n            5,\n            null,\n            function () {\n                // Append the saving throw DC to the chat message\n                return `CON saving throw (DC [[8+${actor.data.data.abilities.wis.mod}+@attributes.prof]])`;\n            }),\n        new KiFeature(\"Ki: Diamond Soul\",\n            `Beginning at 14th level, your mastery of ki grants you proficiency in all saving throws.\n\n        Additionally, whenever you make a saving throw and fail, you can spend 1 ki point to reroll it and take the second result.`,\n            14),\n        new KiFeature(\"Ki: Empty Body\",\n            `Beginning at 18th level, you can use your action to spend 4 ki points to become invisible for 1 minute. During that time, you also have resistance to all damage but force damage.\n\n        Additionally, you can spend 8 ki points to cast the astral projection spell, without needing material components. When you do so, you can’t take any other creatures with you.`,\n            18,\n            null,\n            function () {\n                return \"Note: 4 ki points have been spent. Adjust manually if casting astral projection spell.\";\n            },\n            4),\n    ];\n\n    const consumeKi = (feature, allowNegative, allowHigher) => {\n        let hasAvailableResource = false;\n        let selected = features.find(o => o.name == feature);\n        let kiCost = selected.kiCost || 1;\n\n        // Look for Resources under the Core actor data\n        let resourceKey = Object.keys(actor.data.data.resources).filter(k => actor.data.data.resources[k].label === kiName).shift();\n        if (resourceKey && (actor.data.data.resources[resourceKey].value >= kiCost || allowNegative)) {\n            hasAvailableResource = true;\n            actor.data.data.resources[resourceKey].value -= kiCost;\n        }\n\n        // Look for Ki Points Feat that has uses\n        actor.items.filter(i => i.data.name === kiName && i.data.hasUses && (i.data.data.uses.value >= kiCost || allowNegative)).forEach(i => {\n            hasAvailableResource = true;\n            i.data.data.uses.value -= kiCost\n        })\n\n        if (!hasAvailableResource) {\n            ui.notifications.warn(`${actor.name} does not have any ${kiName} left!`);\n            return false;\n        }\n        if (actor.sheet.rendered) {\n            // Update the actor sheet if it is currently open\n            actor.render(true);\n        }\n\n        if (selected) {\n            selected.render(allowHigher);\n        }\n\n        return true;\n    };\n\n    (async () => {\n        let template = `\n        <form>\n            <div class=\"form-group\">\n                <label>Select feature:</label>\n                <select id=\"feature\" name=\"feature\">`\n        features.filter(o => o.requireLevel <= monkLevels).forEach(o => {\n            template += `<option value=\"${o.name}\">${o.name}</option>`;\n        });\n        template += `</select>\n            </div>\n            <div class=\"form-group\">\n                <label>Allow consuming Ki into negative? <input type=\"checkbox\" id=\"allow-negative\" name=\"allow-negative\" value=\"1\"></label>\n            </div>\n            <div class=\"form-group\">\n                <label>Allow consuming Ki feats of higher level? <input type=\"checkbox\" id=\"allow-higher\" name=\"allow-higher\" value=\"1\"></label>\n            </div>\n        </form>`;\n        new Dialog({\n            title: `Monk Ki Point Spender`,\n            content: template,\n            buttons: {\n                yes: {\n                    icon: \"<i class='fas fa-check'></i>\",\n                    label: `Apply`,\n                    callback: (html) => {\n                        let feature = html.find('#feature')[0].value;\n                        let allowNegative = html.find('#allow-negative')[0].checked;\n                        let allowHigher = html.find('#allow-higher')[0].checked;\n                        consumeKi(feature, allowNegative, allowHigher);\n                    }\n                },\n                no: {\n                    icon: \"<i class='fas fa-times'></i>\",\n                    label: `Cancel`\n                },\n            },\n            default: \"yes\"\n        }).render(true);\n    })();\n})()","folder":"76fmVesxjabFS6ZV","sort":3500001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"FGvraERHMAajrCwK","name":"Delete Token Magic Effects","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/blind.svg","scope":"global","command":"TokenMagic.deleteFiltersOnSelected();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"HX03qq1ZpkscmYJm","name":"LMRTFY: Get Rolling!","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/d20-highlight.svg","scope":"global","command":"// Get Rolling! \r\n// Request rolls from Carmelita Montoya Fox, Harcana\r\n// Abilities: \r\n// Saves: \r\n// Skills: \r\nconst data = {\r\n  \"user\": \"tokens\",\r\n  \"actors\": [\r\n    \"HIfoWaGHZMzCSHeG\",\r\n    \"w9nUE2hmqFmVv9AW\"\r\n  ],\r\n  \"abilities\": [],\r\n  \"saves\": [],\r\n  \"skills\": [],\r\n  \"advantage\": 0,\r\n  \"mode\": \"roll\",\r\n  \"title\": \"Get Rolling!\",\r\n  \"message\": \"\",\r\n  \"formula\": \"\",\r\n  \"deathsave\": false,\r\n  \"initiative\": true\r\n};\r\n\r\ngame.socket.emit('module.lmrtfy', data);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"KLCgy3c9nqeXFwZD","name":"TRAP_DoTrapAttack","type":"script","author":"a2um1mRnicEx282I","img":"icons/weapons/swords/greatsword-crossguard-barbed.webp","scope":"global","command":"// Requires midi-qol to work at all\n// Rolls an attack from actor args[0] using item args[1] and display a token args[2]\n\n//args[0]=\"TrapEffects\"; \n//args[1]=\"Fireball\";\n//args[2]=\"fireballtokentrap\";\n\nlet tactor = game.actors.entities.find(a => a.name === args[0])\nif (!tactor) return `/Whisper GM \"DoTrap: Target token ${args[0]} not found\"`\nlet item = tactor.items.find(i=>  i.name === args[1])\nif (!item) return `/Whisper GM \"DoTrap: Item ${args[1]} not found\"`\nlet trapToken = canvas.tokens.placeables.find(t=>t.name === args[2])\n//trapToken.update({hidden : false}); \nnew MidiQOL.TrapWorkflow(tactor, item, [token], trapToken.center)","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"KYn6ekXViUvNOVqG","name":"Sneak Attack","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//\t\tDISCLAIMER:\t\tThis macro is heavily based on the original D&D 5e Rage Macro masterwork written by Felix#6196.\n//\t\t\t\t\t\tNorc#5108 created and is maintaining this macro.\n//\n//\t\t\t\t\t\tUpdates:\t1.\t2020/06/05: Initial version.\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tBonus Tip: Sneak Attack as a Condition                                                                                                                       \n//!!!\tIf you use the Combat Utility Belt module's Condition Lab, try adding a condition called \"Sneaky\" with the same icon \t\t\t   \n//!!!\tas the optional sneak attack icon overlay, 'icons/svg/mystery-man-black.svg' by default.  See EXPERIMENTAL MACRO ICON/NAME TOGGLE below.\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!   OPTIONAL TOKEN ICON-\tOn by default. If a path to a sneak attack icon is defined, it displays like a condition on the sneaking rogue.\n//!!!\t\t\t\t\t\t\tTo use a different icon, manually change the filepath below or leave it empty ('') to disable the effect.\n//!!!\nconst sneakIconPath = 'icons/svg/mystery-man-black.svg';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tEXPERIMENTAL MACRO ICON/NAME TOGGLE\t\tIf enabled, the macro icon and name toggles based on whether the rogue is currently sneaking. \n//!!!\t\t\t\t\t\t\t\t\t\t\tCAUTIONS: \t1. \tThis feature is off by default and is intended for ADVANCED USERS ONLY. \n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t2. \tRequires configuration using \"The Furnace\" module for a player to run!\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThe GM needs to grant The Furnace's \"Run as GM\" permission for this macro.\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t3. \tWorks best with only one rogue using this feature at a time.\n\n\t\t\t\t//To auto-toggle the macro's icon/name, override toggleMacro to true below.\n\t\t\t\tconst toggleMacro = false;\n\n\t\t\t\t//To use a different icon, manually change the filepath here\n\t\t\t\tconst stopSneakIconPath = 'icons/svg/cowled.svg';\n\n\t\t\t\t//You must update the following constant to this macro's exact name for the macro icon toggling to work.\n\t\t\t\tconst sneakMacroName = 'Sneak Attack';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nlet toggleResult = false;\nlet enabled = false;\nlet errorReason = '';\nlet sneakAttack = {};\nlet rogue = {};\nlet rogueLvls = 0;\nlet sneakDice = 0;\nlet chatMsg = '';\nlet oldMDmg = '';\nlet oldRDmg = '';\n\nlet macroActor = actor;\nlet macroToken = token;\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tBASIC LOCALIZATION SUPPORT\t\t\t\tSets names of D&D5E features as constants instead of hardcoding to allow easier translation.\n//!!!\t\t\t\t\t\t\t\t\t\t\tSets error messages as constants also for easier translation.\n\n\t\t\t\tconst rogueClassName = 'Rogue';\n\t\t\t\tconst sneakAttackFeatureName = 'Sneak Attack';\n\n\t\t\t\tconst errorSelectRogue = 'Please select a single rogue token.';\n\t\t\t\tconst warnMacroNotFound = ' is not a valid macro name, please fix. Sneak attack toggle successful but unable to alter macro.';\n\t\t\t\tconst errorSelectToken = 'Please select a token.';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n//check to ensure token is selected and attempt to define the sneak attack feature\nif (macroActor !== null && macroActor !== undefined) {\n\tsneakAttack = macroActor.items.find(i => i.name == `${sneakAttackFeatureName}`);\n} else {\nerrorReason = `${errorSelectToken}`;\n}\n\n//check to ensure token is a rogue\nif (errorReason == '' && macroActor.items.find(i => i.name == `${rogueClassName}`) !== undefined) {\n\trogue = macroActor.items.find(i => i.name == `${rogueClassName}`);\n} else {\n\terrorReason = `${errorSelectRogue}`;\n}\n\nconsole.log(`Error reason is: ${errorReason}`);\n//main execution now that errors are caught\n\nif (errorReason == '') {\n\t\n\tchatMsg = '';\n\tlet enabled = false;\n\t// store the state of the sneak attack toggle in flags\n\tif (macroActor.data.flags.sneakMacro !== null && macroActor.data.flags.sneakMacro !== undefined) {\n\t\tenabled = true;\n\t}\n\t\n\t// if sneak attack is active, disable it\n\tif (enabled) {\n\t\tchatMsg = `${macroActor.name} is no longer sneak attacking.`;\n\t\t// ranged and melee weapon attack bonus\n\t\tlet obj = {};\n\t\tobj['flags.sneakMacro'] = null;\t\t\n\t\tobj['data.bonuses.mwak.damage'] = macroActor.data.flags.sneakMacro.oldMDmg;\t\t\t\n\t\tobj['data.bonuses.rwak.damage'] = macroActor.data.flags.sneakMacro.oldRDmg;\t\n\t\tmacroActor.update(obj);\n\t\t\n\t// if sneak attack is disabled, enable it\n\t} else {\t\t\n\t\tchatMsg = `${macroActor.name} starts sneak attacking!`;\n\t\t\n\t\tlet obj = {};\n\t\tobj['flags.sneakMacro.enabled'] = true;\n\n\t\t// Preserve old mwak damage bonus if there was one\n\t\tlet oldMDmg = macroActor.data.data.bonuses.mwak.damage;\n\t\tif (oldMDmg==null || oldMDmg == undefined || oldMDmg == '') oldMDmg = 0;\n\t\tobj['flags.sneakMacro.oldMDmg'] = JSON.parse(JSON.stringify(oldMDmg));\n\n\t\t// Preserve old rwak damage bonus if there was one\n\t\tlet oldRDmg = macroActor.data.data.bonuses.rwak.damage;\n\t\tif (oldRDmg==null || oldRDmg == undefined || oldRDmg == '') oldRDmg = 0;\n\t\tobj['flags.sneakMacro.oldRDmg'] = JSON.parse(JSON.stringify(oldRDmg));\n\n\t\t\n\t\t// Determining the rogue level\n\t\trogueLvls = rogue.data.data.levels;\n\n\t\t// Formula to determine the sneak attack damage depending on rogue level\t\n\t\tsneakDice = Math.ceil(rogueLvls/2);\n\t\n\t\t//actually add the bonus sneak attack damage to the previous bonus damage\n\t\t//respect roll formulas if present.\n\t\tif (oldMDmg==null || oldMDmg == undefined || oldMDmg == '' || oldMDmg == 0) {\n\t\t\tobj['data.bonuses.mwak.damage'] = `${sneakDice}d6`;\n\t\t} else {\n\t\t\tobj['data.bonuses.mwak.damage'] = `${oldMDmg} + ${sneakDice}d6`;\n\t\t}\n\n\t\tif (oldRDmg==null || oldRDmg == undefined || oldRDmg == '' || oldRDmg == 0) {\n\t\t\tobj['data.bonuses.rwak.damage'] = `${sneakDice}d6`;\n\t\t} else {\n\t\t\tobj['data.bonuses.rwak.damage'] = `${oldRDmg} + ${sneakDice}d6`;\n\t\t}\t\n\n\t\tmacroActor.update(obj);\n\n\t}\t\n\t\n\t//mark or unmark character's token with Sneaky effect icon, if sneakIconPath is defined\n\t(async () => { \n\t\ttoggleResult = await macroToken.toggleEffect(sneakIconPath);\n\t\tif (toggleResult == enabled) macroToken.toggleEffect(sneakIconPath);  \n\t})();\n\n\t//toggle macro icon and name, if enabled\n\tif (toggleMacro) {\n//\t\tNorc's preferred icons, not sure if publicly available\n//\t\tsneakyMacroImgPath = 'systems/dnd5e/icons/skills/shadow_17.jpg';\n//\t\tstopSneakIconPath = 'systems/dnd5e/icons/skills/yellow_11.jpg';\n\t\tlet sneakMacro = game.macros.getName(sneakMacroName);\n\t\t\t//Also check for name of macro in its \"off\" form\n\t\t\tif (sneakMacro == null || sneakMacro == undefined) {\n\t\t\t\tsneakMacro = game.macros.getName('Stop ' + sneakMacroName);\n\t\t\t}\n\t\tlet obj = {};\n\t\tif ( (sneakMacro !== null && sneakMacro !== undefined) && \n\t\t\t\t+ (stopSneakIconPath !== null && stopSneakIconPath !== undefined && stopSneakIconPath !== '') ) {\n\t\t\tif (enabled) {\n\t\t\tobj['img'] = sneakIconPath;\n\t\t\tobj['name'] = sneakMacroName;\n\t\t\t} else {\n\t\t\tobj['img'] = stopSneakIconPath;\n\t\t\tobj['name'] = 'Stop ' + sneakMacroName;\n\t\t\t}\n\t\t\tsneakMacro.update(obj);\n\t\t} else {\n\t\tui.notifications.warn(`${sneakMacroName} ${warnMacroNotFound}`);\t\t\t\n\t\t}\n\t}\n\n} else {\nui.notifications.error(`${errorReason}`);\t\n}\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n\t};\n\tChatMessage.create(chatData, {});\n}","folder":"76fmVesxjabFS6ZV","sort":4400001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"LcYKGbDTcQGyggGp","name":"Heavy Armor Feat Workaround","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Crude but effective way to simulate Heavy Armor Master.\n//Every time the player takes eligible damage, they can just click this macro with their token selected to \"get their 3HP back.\"\n//Questions? Ask in #macro-polo on Discord. If absolutely needed, please ping Norc#5108.\n\n//Known minor limitation: Does not take into account temp HP AT ALL.\n\nfunction modifyHP(token, amount) {\n    let hp_cur = token.actor.data.data.attributes.hp.value;\n    let hp_max = token.actor.data.data.attributes.hp.max;\n    let hp_min = token.actor.data.data.attributes.hp.min;\n    hp_cur = (hp_cur+amount > hp_max) ? hp_max : hp_cur+amount;\n    hp_cur = (hp_cur < hp_min) ? hp_min : hp_cur;\n    token.actor.update({'data.attributes.hp.value': parseInt(hp_cur)});\n    return hp_cur;\n  }\n\nif(token) {\n    //Note: Just change the number after the comma to heal/receive other HP values. Negative numbers indicate damage.\n    modifyHP(token,3);\n} else {\n    ui.notifications.notify(\"Please select a token.\");\n}6","folder":"76fmVesxjabFS6ZV","sort":3300001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"MuN5LUT74exrDEYT","name":"Stealth Check","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Grabs selected tokens and rolls a stealth check against all other tokens passive perception on the map. Then returns the result.\n\n// getting all actors of selected tokens\nlet actors = canvas.tokens.controlled.map(({ actor }) => actor);\n\n// if there are no selected tokens, roll for the player's character.\nif (actors.length < 1) {\n  actors = game.users.entities.map(entity => {\n    if (entity.active && entity.character !== null) {\n      return entity.character;\n    }\n  });\n}\nconst validActors = actors.filter(actor => actor != null);\n\nlet messageContent = 'pp = passive perception<br>';\n\n// roll for every actor\nfor (const selectedActor of validActors) {\n  const stealthMod = selectedActor.data.data.skills.ste.total; // stealth roll\n  const stealth = new Roll(`1d20+${stealthMod}`).roll().total; // rolling the formula\n  messageContent += `<hr><h3>${selectedActor.name} stealth roll was a <b>${stealth}</b>.</h3>`; // creating the output string\n\n  // grab a list of unique tokens then check their passive perception against the rolled stealth.\n  const uniqueActor = {};\n  const caughtBy = canvas.tokens.placeables\n    .filter(token => !!token.actor)\n    .filter(({ actor }) => { // filter out duplicate token names. ie: we assume all goblins have the same passive perception\n      if (uniqueActor[actor.name]) {\n        return false;\n      }\n      uniqueActor[actor.name] = true;\n      return true;\n    })\n    .filter(({ actor }) => {\n      return selectedActor.id !== actor.id; // Don't check to see if the token sees himself.\n    })\n    .filter(({ actor }) => actor.data.data.skills.prc.passive >= stealth); // check map tokens passives with roller stealth\n\n  if (!caughtBy.length) {\n    messageContent += 'Stealth successful!<br>';\n  } else {\n    messageContent += 'Stealth questionable:<br>';\n    caughtBy.map(({ actor }) => {\n      messageContent += `<b>${actor.name}</b> pp(${actor.data.data.skills.prc.passive}).<br>`;\n    });\n  }\n}\n\n// create the message\nconst chatData = {\n  user: game.user._id,\n  speaker: game.user,\n  content: messageContent,\n  whisper: game.users.entities.filter((u) => u.isGM).map((u) => u._id),\n};\nChatMessage.create(chatData, {});","folder":"76fmVesxjabFS6ZV","sort":4500001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"Nde4SVN0t8CH8Ldl","name":"25 - T03 - X-ray Scan (xray)","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/cave.svg","scope":"global","command":"let params =\n[{\n    filterType: \"xray\",\n    filterId: \"myXrayScan\",\n    time: 0,\n    color: 0xFFFFFF,\n    blend: 5,\n    dimX: 20,\n    dimY: 20,\n    anchorX: 0.5,\n    anchorY: 0,\n    divisor: 8,\n    intensity: 1,\n    animated :\n    {\n       time : \n       { \n          active: true, \n          speed: 0.00038, \n          animType: \"move\" \n       }\n    }\n}];\n\nTokenMagic.addUpdateFiltersOnSelected(params);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"Njc5YzFjZDI5NjZl":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"NooLH6HyVg6qCzWm","name":"Candle","type":"script","author":"a2um1mRnicEx282I","img":"icons/sundries/lights/candle-unlit-white.webp","scope":"global","command":"const ld={\"t\":\"l\",\"dim\":10,\"bright\":5,\"angle\":360,\"rotation\":0,\"darknessThreshold\":0,\"tintColor\":\"\",\"tintAlpha\":0.49,\"lightAnimation\":{\"type\":\"\",\"speed\":5,\"intensity\":5},\"flags\":{},\"darkness\":{\"min\":0,\"max\":1}};\nLightTemplates.activate(this.id,ld);","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{"df-architect":{"isLightTemplate":true},"core":{"sourceId":"Macro.sEf9UXjGVQrXB8jc"}},"ownership":{"default":0,"HIJ2AzmxNwBBJd8W":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"OYzwlrJRyiMyguqX","name":"Fighter Second Wind","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//With your fighter token selected, click this macro to regain your second wind.\n//Questions? Ask in #macro-polo on Discord. If absolutely needed, please ping Norc#5108.\n\n//TO DO:    Add option to check for available Second Wind uses and automatcally expend one.\n//          Add additional option to fail usage if no uses left.\n\nfunction modifyHP(token, amount) {\n    //Known minor limitation: Does not take into account temp HP AT ALL.\n    let hp_cur = token.actor.data.data.attributes.hp.value;\n    let hp_max = token.actor.data.data.attributes.hp.max;\n    let hp_min = token.actor.data.data.attributes.hp.min;\n    hp_cur = (hp_cur+amount > hp_max) ? hp_max : hp_cur+amount;\n    hp_cur = (hp_cur < hp_min) ? hp_min : hp_cur;\n    token.actor.update({'data.attributes.hp.value': parseInt(hp_cur)});\n    return hp_cur;\n  }\n\nif(token) {\n    let fighter = actor.items.find(i => i.name == \"Fighter\");\n    if (fighter)  {\n        let fighterLevel = parseInt(fighter.data.data.levels);\n        let formula = `1d10 + ${fighterLevel}`;\n        console.log(formula);\n        let amount = new Roll(formula).roll().total; \n        //Note: Just change the number after the comma to heal/receive other HP values. Negative numbers indicate damage.\n        modifyHP(token, amount);\n    } else {\n        ui.notifications.notify(\"Please select a token that has at least one Fighter level.\");\n    } \n} else {\n    ui.notifications.notify(\"Please select a token.\");\n}","folder":"76fmVesxjabFS6ZV","sort":3000001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"Oj6cX5FQJoCy9t5M","name":"Show Tendrils","type":"script","author":"a2um1mRnicEx282I","img":"external_scenes/myTokens/porvenir/tokens/Tendrils-Token-10x6.png","scope":"global","command":"const x = canvas.tiles.get('Neckbeard Bandit(1)');\nx.update({hidden: false});","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.E40EOyE3oQOWzQLH"},"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"QAiwzgT9DN9m7v1W","name":"Find_Familiar","type":"script","author":"a2um1mRnicEx282I","img":"modules/foundryvtt-compendiums-mix-dnd5e/assets/summoner/icons/sonic-screech.svg","scope":"global","command":"// Find Familiar Spell - Allows the player to select which familiar they want\n// Thanks to Kekilla and Cole for additonal help on Discord\n// \"You want a familiar? Oh boy!\" - Droop\n// Written by Jon Whitehouse [MTGCarver#7753]\nmain()\n\nasync function main() {\n    // Is token selected? If not, error\n    if (canvas.tokens.controlled.length == 0 || canvas.tokens.controlled.length > 1) {\n        ui.notifications.error(\"Please select a single token.\");\n        return;\n    }\n    let actor = canvas.tokens.controlled[0].actor;\n\n    // Does player have the find familiar spell?\n    console.log(\"Actor: \", actor);\n    let findFamiliar = actor.items.find(item => item.data.name == \"Find Familiar\")\n    if (findFamiliar == null || findFamiliar == undefined) {\n        ui.notifications.error(`Sorry ${actor.data.name}, but you don't have the find familiar spell. Get bent.`);\n        return;\n    }\n\n    // What are the familiars available?\n    //  bat, cat, crab, frog, hawk, lizard, octopus, owl, poisonous snake, fish, rat, raven, sea horse, spider, weasel.\n    let conjureTarget = \"Bat\";\n    let summonCreature = false;\n    new Dialog({\n        title: `Choose a familiar`,\n        content: `\n            <form>\n            <div class=\"form-group\">\n              <label>Familiar:</label>\n                <select id=\"familiar-type\" name=\"familiar-type\">\n                <option value=\"bat\">Bat</option>\n                <option value=\"cat\">Cat</option>\n                <option value=\"crab\">Crab</option>\n                <option value=\"frog\">Frog</option>\n                <option value=\"hawk\">Hawk</option>\n                <option value=\"lizard\">Lizard</option>\n                <option value=\"octopus\">Octopus</option>\n                <option value=\"owl\">Owl</option>\n                <option value=\"poisonous_snake\">Poisonous Snake</option>\n                <option value=\"fish\">Quipper (Fish)</option>\n                <option value=\"rat\">Rat</option>\n                <option value=\"raven\">Raven</option>\n                <option value=\"sea-horse\">Sea Horse</option>\n                <option value=\"spider\">Spider</option>\n                <option value=\"weasel\">Weasel</option>\n                </select>\n            </div>\n            </form>\n        `,\n        buttons: {\n            summon: {\n                icon: \"<i class='fas fa-check'></i>\",\n                label: `Summon`,\n                callback: () => summonCreature = true\n            },\n            cancelOut: {\n                icon: \"<i class='fas fa-times'></i>\",\n                label: `Cancel`\n            },\n        },\n        default: \"summon\",\n        close: html => {\n            if (summonCreature) {\n                for (let token of canvas.tokens.controlled) {\n                    let FamiliarType = html.find('[name=\"familiar-type\"]')[0].value || \"none\";\n                    let conjureTarget = \"Bat\";\n                    let targetFamiliarID = \"0\";\n\n                    // Determine the player's token location and grab the X & Y coordinates\n                    const playerName = actor.data.name;\n                    const playerToken = canvas.tokens.placeables.find(\n                        i => i.name === playerName\n                    );\n                    const playerX = playerToken.data.x;\n                    const playerY = playerToken.data.y;\n\n                    console.log(\"PlayerName: \", playerName);\n                    console.log(\"playerToken: \", playerToken);\n                    console.log(\"playerX: \", playerX);\n                    console.log(\"playerY: \", playerY);\n                  \n                    // Get Type of Creature\n                    switch (FamiliarType) {\n                        case \"bat\":\n                            conjureTarget = game.actors.getName(\"Bat\");\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"cat\":\n                            conjureTarget = game.actors.getName(\"Cat\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"crab\":\n                            conjureTarget = game.actors.getName(\"Crab\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"frog\":\n                            conjureTarget = game.actors.getName(\"Frog\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"hawk\":\n                            conjureTarget = game.actors.getName(\"Hawk\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"lizard\":\n                            conjureTarget = game.actors.getName(\"Lizard\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"octopus\":\n                            conjureTarget = game.actors.getName(\"Octopus\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"owl\":\n                            conjureTarget = game.actors.getName(\"Owl\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"poisonous_snake\":\n                            conjureTarget = game.actors.getName(\"Poisonous Snake\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"fish\":\n                            conjureTarget = game.actors.getName(\"Quipper\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"rat\":\n                            conjureTarget = game.actors.getName(\"Rat\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"raven\":\n                            conjureTarget = game.actors.getName(\"Raven\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"sea-horse\":\n                            conjureTarget = game.actors.getName(\"Sea Horse\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"spider\":\n                            conjureTarget = game.actors.getName(\"Spider\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        case \"weasel\":\n                            conjureTarget = game.actors.getName(\"Weasel\")\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                            break;\n                        default:\n                            conjureTarget = game.actors.getName(\"Bat\");\n                            console.log(\"Picked: \", conjureTarget.data.name);\n                    }\n                    // Now let's place it on the map and set all the values we want\n                    let updateToken = duplicate(conjureTarget.data.token);\n                    updateToken.x = playerX + 65;\n                    updateToken.y = playerY;\n                    updateToken.bar1 = {attribute: \"attributes.hp\"};\n                    updateToken.bar2 = {attribute: \"attributes.ac.value\"};\n                    updateToken.displayName = 20;\n                    updateToken.displayBars = 20;\n                    canvas.tokens.createMany(updateToken);\n                    console.log(\"Created token\");\n                }\n            }\n        }\n    }).render(true);\n}","folder":"76fmVesxjabFS6ZV","sort":5300001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"macro-marker":{"activeData":{"icon":"icons/svg/dice-target.svg","tooltip":"Find_Familiar                                                        ","colour":"#ff0000","trigger":""}},"core":{"sourceId":"Macro.cdehLy6YJ8Nr2vsh"}},"ownership":{"default":0,"Lh5pfUwqYBvIlqqt":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"SqG7s3LHb2h9Udto","name":"Roll Ability","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"(()=>{\n  let statString = `4d6r<3kh3`;\n  let stats = Array(6).fill(0).map(e=>new Roll(statString).roll()).sort((a,b)=>{return b.total-a.total});\n  \n  let total_average = 0, total_low = 0, total_high = 0, total_header = 0, average_kept = -1, average_change = 0;\n\n  average_kept = average(stats.map(x=> x.terms[0].results.filter(i=> i?.discarded !== true && i?.rerolled !== true).length));\n  average_change = average(stats.map(x=> x.terms[0].results.filter(i=>i?.discarded === true || i?.rerolled === true).length));\n  \n  total_average = (((stats[0].terms[0].faces/2) + 0.5) * average_kept) + average_change;\n  total_low = Math.ceil(total_average - (stats[0].terms[0].faces/2));\n  total_high = Math.ceil(total_average + (stats[0].terms[0].faces/2));\n\n  total_header = Math.max(...stats.map(x=> x.terms[0].results.length));\n\n  let content = `\n  <table style=\"text-align:center\">\n    <tr>\n      <th colspan=\"${total_header + 2}\">New Ability Scores</th>\n    </tr>\n    <tr style=\"border-bottom:1px solid #000\">\n      <th colspan=\"${total_header + 2}\">${statString}</th>\n    </tr>\n    <tr style=\"border-bottom:1px solid #000\">\n      ${Array(total_header).fill(0).map((v,i)=> `<th>D${i+1}</th>`).join(``)}\n      <th style =\"border-left:1px solid #000\">Total</th>\n      <th style =\"border-left:1px solid #000\">Mod</th>\n    </tr>\n    ${stats.map((stat,stat_i)=> {\n\n      let return_value = `<tr>`;\n      return_value += Array(total_header).fill(0).map((v,i)=>\n      {\n        let roll = stat.terms[0].results[i]?.result;\n        let discard = stat.terms[0].results[i]?.discarded;\n        let rerolled = stat.terms[0].results[i]?.rerolled;\n\n        if(roll)\n        {\n          if(discard) return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}-d</td>`;\n          if(rerolled) return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}-r</td>`;\n\n          return `<td style=\"${colorSetter(roll,1,stat.terms[0].faces)}\">${roll}</td>`;\n        }else{\n          return `<td></td>`;\n        }\n      }).join(``)\n\n      return return_value += `<td style=\"border-left:1px solid #000; ${colorSetter(stat.total,total_low,total_high)}\">${stat.total}</td><td style=\"border-left:1px solid #000; ${colorSetter(Math.floor((stat.total-10)/2),-1,1)}\">${Math.floor((stat.total-10)/2)}</td></tr>`\n    }).join(``)}\n    <tr>\n      <td colspan=\"${total_header}\" style=\"border-top:1px solid #000;\"> Sum : </td>\n      <td style=\"border-left:1px solid #000; border-top:1px solid #000;\">${stats.reduce((a,c,i)=> a+c.total,0)}</td>\n      <td style=\"border-left:1px solid #000; border-top:1px solid #000;\">${stats.reduce((a,c,i)=> a+(Math.floor((c.total-10)/2)),0)}</td>\n    </tr>\n  </table>\n  `;\n\n  ChatMessage.create({content});\n})();\n\nfunction colorSetter(number,low,high)\n{\n  if(number <= low) return `color:red`;\n  if(number >= high) return `color:green`;\n  return ``;\n}\n\nfunction average(nums)\n{\n  return nums.reduce((a,b) => (a+b))/nums.length;\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"advanced-macros":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"TjJqZ0l2A1kq3FB9","name":"Boots of Speed","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"let target = canvas.tokens.get(args[1]);\nlet ActorUpdate = game.macros.getName(\"ActorUpdate\");\nlet ActorSetFlag = game.macros.getName(\"ActorSetFlag\");\nlet ActorUnSetFlag = game.macros.getName(\"ActorUnSetFlag\");\nlet speed = parseInt(target.actor.data.data.attributes.speed.value);\n\nif (!target.actor.getFlag('world', 'bootsOfSpeed')) {\n    let newSpeed = (speed * 2) + \"ft\";\n    ActorUpdate.execute(args[1], {\"data.attributes.speed.value\": newSpeed});\n    ActorSetFlag.execute(args[1], 'world', 'bootsOfSpeed', speed);\n} else {\n    let newSpeed = target.actor.getFlag('world', 'bootsOfSpeed')\n    ActorUpdate.execute(args[1],{\"data.attributes.speed.value\": (newSpeed + \"ft\")});\n    ActorUnSetFlag.execute(args[1],'world', 'bootsOfSpeed');\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false},"core":{"sourceId":"Macro.6lbP06dm7YmO8vGE"}},"ownership":{"default":0,"XE30TcnpPFgl2g1S":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"U3zSNOQddgFHXY8x","name":"Mark Dead","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/bones.svg","scope":"global","command":"/**\r\n*  This macro will mark the selected tokens as dead.\r\n*  If all the selected tokens are dead, they will be marked\r\n   as alive instead.\r\n*/\r\n\r\nlet hasAlive = false;\r\nfor (let e of canvas.tokens.controlled) {\r\n\tif (!e.getFlag(\"healthEstimate\", \"dead\")) {\r\n\t\thasAlive = true;\r\n\t\tbreak\r\n\t}\r\n}\r\nfor (let e of canvas.tokens.controlled) {\r\n\te.setFlag(\"healthEstimate\", \"dead\", hasAlive)\r\n}","folder":"76fmVesxjabFS6ZV","sort":4800001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"Y2U0NDkzODdlOTk1":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"Ugc4PRjYeoCdbQFo","name":"27 - T05 - Pure Fire v2 (xglow+fire)","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/fire.svg","scope":"global","command":"// In this version, the glow is blending with the fire\n// This is to show that the order of the filters is important\nlet params =\n[{\n    filterType: \"zapshadow\",\n    filterId: \"myPureFireShadow\",\n    alphaTolerance: 0.50\n},\n{\n    filterType: \"xglow\",\n    filterId: \"myPureFireAura\",\n    auraType: 2,\n    color: 0x903010,\n    thickness: 9.8,\n    scale: 3.,\n    time: 0,\n    auraIntensity: 1,\n    subAuraIntensity: 0.3,\n    threshold: 0.25,\n    discard: true,\n    animated:\n    {\n        time : \n        {  \n           active: true,\n           speed: 0.0027, \n           animType: \"move\" \n        },\n        thickness:\n        {\n           active: true,\n           loopDuration: 3000, \n           animType: \"cosOscillation\", \n           val1:2, \n           val2:3.6\n        }\n    }\n},\n{\n    filterType: \"fire\",\n    filterId: \"myPureFire\",\n    intensity: 1,\n    color: 0xFFFFFF,\n    amplitude: 1,\n    time: 0,\n    blend: 2,\n    fireBlend : 1,\n    animated :\n    {\n      time : \n      { \n        active: true, \n        speed: -0.0024, \n        animType: \"move\" \n      },\n      intensity:\n      {\n        active:true,\n        loopDuration: 15000,\n        val1: 0.8,\n        val2: 3,\n        animType: \"syncCosOscillation\"\n      },\n      amplitude:\n      {\n        active:true,\n        loopDuration: 4400,\n        val1: 1,\n        val2: 1.6,\n        animType: \"syncCosOscillation\"\n      }\n      \n    }\n}];\n\nTokenMagic.addUpdateFiltersOnSelected(params);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"Njc5YzFjZDI5NjZl":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"VesTntJFpLJGCqGd","name":"Great Weapon Master","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/*\nCreated Monkan#8752 with guidance from the Rage macro in the FVTT Community Macros\n\nTips to make it work\n 1 -    Have a feature called 'Great Weapon Master' for your character.\n 2 -    Make sure you have your weapons with Heavy property filled out. \n 3 -    if you make any changes to your damage or attack calculations, make sure you toggle it off.\n        As it stores the old values to replace once you disable the feat.  It could undo your changes.\n*/\n\nlet gwm='';\nlet chatMsg='';\n\n\nif (actor !== undefined && actor !== null) {\n    // find the feat Great Weapon Master\n    gwm = actor.items.find(i => i.name === 'Great Weapon Master');\n    if (gwm == undefined) { \n        ui.notifications.warn(\"Please select a single token with the Great Weapon Master feat.\");        \n    }\n\n    if (gwm !== undefined && gwm !== null) {\n\t\tchatMsg = '';\n\t\tlet enabled = false;\n\t\t// store the state of the GWM toggle in flags\n\t\tif (actor.data.flags.gwmMacro !== null && actor.data.flags.gwmMacro !== undefined) {\n\t\t\tenabled = true;\n\t\t}\n\t\t// if GWM is active, disable it\n\t\tif (enabled) {\n            chatMsg = `${actor.name} is swinging Normally now.`;\n            \n            let obj = {};\n\t\t\tobj['flags.gwmMacro'] = null;\t\t\t\n\t\t\tactor.update(obj);\n\n\t\t\t// reset items\n\t\t\tfor (let item of actor.items) {\n\t\t\t\tif (item.data.flags.gwmMacro !== null && item.data.flags.gwmMacro !== undefined) {\n\t\t\t\t\t// restoring the old value from flags\n                    let oldDmg = item.data.flags.gwmMacro.oldDmg;\n                    let oldAtk = item.data.flags.gwmMacro.oldAtk;\n\t\t\t\t\tlet obj = {};\n                    obj['data.damage.parts'] = oldDmg;\n                    obj['data.attackBonus'] = oldAtk;\n\t\t\t\t\tobj['flags.gwmMacro'] = null;\n\t\t\t\t\titem.update(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t// if GWM is disabled, enable it\n\t\t} else {\n            chatMsg = `${actor.name} is swinging Harder!`;\n            \n            let obj = {};\n\t\t\tobj['flags.gwmMacro.enabled'] = true;\n\t\t\tactor.update(obj);\n\n            // update items\n            let gwmAtk = -5;\n\t\t\tlet gwmDmg = 10;\n\t\t\tfor (let item of actor.items) {\n                let isMelee = getProperty(item, 'data.data.actionType') === 'mwak';\n                let isHeavy = getProperty(item, 'data.data.properties.hvy')\n\t\t\t\tif (isMelee && isHeavy && item.data.data.damage.parts.length > 0) {\n\t\t\t\t\tconsole.log('updating ' + item);\n                    let obj = {};\n                    let atk = item.data.data.attackBonus;\n                    let dmg = item.data.data.damage.parts;\n                    // Save old attack and damage values\n                    obj['flags.gwmMacro.oldDmg'] = JSON.parse(JSON.stringify(dmg));\n                    obj['flags.gwmMacro.oldAtk'] = JSON.parse(JSON.stringify(atk));\n                    // Set the new attack and damage values\n                    if (atk !== null) {\n                        atk += '' + gwmAtk;\n                    } else {\n                        atk = gwmAtk;\n                    }\n\t\t\t\t\tdmg[0][0] = `${dmg[0][0]} + ${gwmDmg}`;\n                    obj['data.damage.parts'] = dmg;\n                    obj['data.attackBonus'] = atk;\n\t\t\t\t\titem.update(obj);\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n    }\n\n} else ui.notifications.warn(\"Please select a token.\");\n\n// write to chat if needed:\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n    };\n\tChatMessage.create(chatData, {});\n}","folder":"76fmVesxjabFS6ZV","sort":3100001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"VgLm8UvJ6qEtkR0M","name":"Generate Currency for Selected Tokens","type":"script","author":"a2um1mRnicEx282I","img":"icons/commodities/currency/coins-assorted-mix-copper-silver-gold.webp","scope":"global","command":"const macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.generateCurrencyForSelectedTokens();","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{"core":{"sourceId":"Macro.R9w15lFmGsAIHCQK"}},"ownership":{"default":0,"FRluk9qbsNFzsRoC":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"XKQqi5EALJeW4IUn","name":"activateLigth \"Lights\"","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"let target = canvas.tokens.objects.children.find(token => token.data.name.toLowerCase().trim() == \"LIGHTS\".toLowerCase().trim());\ntarget.update({ \"hidden\": false });","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"YPm5Vsn8EHEcYXbu","name":"logtest","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"console.error('test')","folder":null,"sort":0,"flags":{"combat-utility-belt":{"macroTrigger":""},"advanced-macros":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"bDjnJJLVChvX5h9i","name":"Hide Tendrils","type":"script","author":"a2um1mRnicEx282I","img":"external_scenes/myTokens/porvenir/tokens/Tendrils-Token-10x6.png","scope":"global","command":"const x = canvas.tiles.get('l8PMoallpEHjPXVb');\nx.update({hidden: true});","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.IHeelRDcWqJ2KEmu"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"c7hzom3lYf0Y6NCQ","name":"Smoke","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/bridge.svg","scope":"global","command":"// Example:\nlet params =\n    [{\n        filterType: \"field\",\n        filterId: \"tokenmagic-example\",\n        outerStrength: 3,\n        color: 0x003000,\n        padding: 600\n    }];\n\n// All possible existing filters will be deleted on the selected placeables before applying the new filters\n// Technical precision -> it is just one call to a setFlag which add and delete the filters\nTokenMagic.addFiltersOnSelected(params, true);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"dowTbh9M4goe9Fd0","name":"Rage","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//\t\tDISCLAIMER:\t\tThis macro is an evolved version of the original D&D 5e Rage Macro masterwork written by Felix#6196.\n//\t\t\t\t\t\tNorc#5108 is now maintaining this macro along with continued support from Felix.\n//\n//\n//\t\tUPDATES:\t\t1.\tFixed errors resulting from declarations of \"actor\" and \"token\" in a script macro. \n//\t\t\t\t\t\t\tAdded automatic Totem Spirit: Bear detection and resistance application \n//\t\t\t\t\t\t\tAdded error messages for trying to rage with no token or no barbarian selected\n//\t\t\t\t\t\t2.\t(Felix) Added resource/usage deduction and errors (re-added after accidentally overwriting the addition)\n//\t\t\t\t\t\t\tFixed rage damage at level 8\n//\t\t\t\t\t\t3.\t(2020/05/30) \"Version 2.0\" \t\n//\t\t\t\t\t\t\tImplemented Felix's idea to use global melee weapon attack bonus instead of modifying items\n//\t\t\t\t\t\t\tImproved Rage icon toggling to be more reliable\n//\t\t\t\t\t\t\tRemoved code from the resource management that created dependency on The Furnace Advanced Macros\n//\t\t\t\t\t\t\tImplemented Felix's fix for issue where new resistances and rage uses were not saving properly\n//\t\t\t\t\t\t\tFixed rage damage formula again...\n//\t\t\t\t\t\t\tAdded basic support for non-strength Based barbarians (Dex, Hexblade)\n//\t\t\t\t\t\t\tAdded optional ability to toggle the icon and name of the macro itself based on current raging state.\n//\t\t\t\t\t\t4.\t(2020/06/04) \n//\t\t\t\t\t\t\tFixed bug with experimental macro name/icon toggle only by renaming \"actor\" and \"token\"\n//\t\t\t\t\t\t\tAdded basic localization support to allow searching for translated class features\n//\t\t\t\t\t\t5.\t(2020/06/10)\n//\t\t\t\t\t\t\tRework to rage damage logic under the hood for edge case (other changes to bonus damage mid-combat) \n//\t\t\t\t\t\t\tRemoved logic that was causing multiple character sheets to open in some cases\n//\t\t\t\t\t\t\tEnhanced localization support\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!   Bonus Tip 1: \t\tOptional Rage Resource Consumption\n//!!!\tTo automatically use and track Rage, you must have a resource exactly named \"Rage\" on your character sheet. This text can be changed\n//!!!\tby altering the value for \"rageResourceName\" in the LOCALIZATION SUPPORT section below).\n//!!!\tNote: \tImporting via VTTA Beyond Integration uses this text already. The macro can then automatically detect the Rage resource.\n//!!!\n//!!!\tBonus Tip 2: \t\tBear Totem Spirit Barbs\n//!!!\tIf you chose the Spirit Seeker Primal path, and at level 3 you chose the Bear Totem Spirit (resistance to all non-psychic damage), \n//!!!\tin your 5E character sheet, double-check that the name of your Totem Spirit feature to EXACTLY \"Totem Spirit: Bear\". This text can be\n//!!!\tchanged by altering the value for \"bearTotemFeatureName\" in the LOCALIZATION SUPPORT section below).\n//!!!\tNote: \tImporting via VTTA Beyond Integration uses this text already. The macro then automatically adds the extra \n//!!!\t\t\tBear Totem Spirit resistances.\n//!!!\n//!!!\tBonus Tip 3: \t\tThrown Weapons\n//!!!\tWhen a barb throws a weapon using strength, typically a javelin but also possibly a dagger, dart, sword, bar table etc, the rage bonus\n//!!!\tshould not be added because it is a ranged attack. However, D&D5E calls javelins and daggers Melee Weapons, because technically they\n//!!!\tare both. To solve this issue, if you always throw the weapon, click the weapon's details and change the attack type to \"Ranged Weapon\n//!!!\tAttack\" in the Action Type dropdown. If you want, you can add a second copy of the item (with no weight/quantity) to use for meleeing.\n//!!!\n//!!!\tBonus Tip 4: \t\tThe Rage Condition\n//!!!\tIf you use the Combat Utility Belt module's Condition Lab, try adding a condition called \"Raging\" with the same icon\n//!!!\tas the optional rage icon overlay, 'icons/svg/explosion.svg' by default.  See EXPERIMENTAL MACRO ICON/NAME TOGGLE section below.\n//!!!\n//!!!\tBonus Tip 5: \t\tObsidian Sheet Compatibility\n//!!!\tIf using Obsidian module, try replacing \"Barbarian\" with \"brb\" as the barbClassName value in LOCALIZATION SUPPORT below.\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tOPTIONAL TOKEN ICON-\tOn by default. If a path to a rage icon is defined, it displays like a condition on the raging barbarian.\n//!!!\t\t\t\t\t\t\tTo use a different icon, manually change the filepath below or leave it empty ('') to disable the effect.\n//!!!\nconst rageIconPath = 'icons/svg/explosion.svg';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tOPTIONAL RESOURCE DEDUCTION \tOn by default. First option automatically subtracts from the Rage Resource if enabled.\n//!!!\t\t\t\t\t\t\t\t\tSecond option prevents raging if no Rage resource is left. Set to false if you do not want this.\n\n\t\t\tconst deductResource = true;\n\t\t\tconst preventNegativeResource = true;\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tOPTIONAL NON-STRENGTH BARBARIAN SUPPORT\t\tONLY override to FALSE if your barbarian does not use Strength to make melee attacks\n//!!!\t\t\t\t\t\t\t\t\t\t\t\tand therefore does not get the Rage bonus to melee weapon attack damage.\n//!!!\n\t\t\tconst strAttacks = true;\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tEXPERIMENTAL MACRO ICON/NAME TOGGLE\t\tIf enabled, the macro icon and name toggles based on the barbarian's rage state.\n//!!!\t\t\t\t\t\t\t\t\t\t\tCAUTIONS: \t1. \tThis feature is off by default and is intended for ADVANCED USERS ONLY.\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t2. \tRequires configuration using \"The Furnace\" module for a player to run!\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tThe GM needs to grant The Furnace's \"Run as GM\" permission for this macro.\n//!!!\t\t\t\t\t\t\t\t\t\t\t\t\t\t3. \tWorks best with only one barbarian using this feature at a time.\n\n\t\t\t//To auto-toggle the macro's icon/name, override toggleMacro to true below.\n\t\t\tconst toggleMacro = false;\n\n\t\t\t//To use a different icon, manually change the filepath here\n\t\t\tconst stopRageIconPath = 'icons/svg/unconscious.svg';\n\n\t\t\t//You must update the following constant to this macro's exact name for the macro icon toggling to work.\n\t\t\tconst rageMacroName = 'Rage';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n//declarations\nlet barb = '';\nlet chatMsg = '';\nlet bear = '';\nlet noRage = false;\nlet rageDmgAdded = false;\nlet toggleResult = false;\nlet macroActor = actor;\nlet macroToken = token;\n\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n//!!!\tLOCALIZATION SUPPORT\t\t\t\tSets names of D&D5E features as constants instead of hardcoding to allow easier translation.\n//!!!\t\t\t\t\t\t\t\t\t\tSets error messages and flavor text as constants also for easier translation.\n//!!!\n\t\t\t//MUST MATCH VALUES IN CHARACTER SHEET (if present)\n\t\t\tconst barbClassName = 'Barbarian';\n\t\t\tconst rageResourceName = 'Rage';\n\t\t\tconst bearTotemFeatureName = 'Totem Spirit: Bear';\n\n\t\t\t//All remaining values may be changed freely\n\n\t\t\t//Rage chat message flavor text. Actor's name appears immediately before these two strings in the message.\n\t\t\tconst rageMsg = ' is RAAAAAGING!'\n\t\t\tconst endRageMsg =  ' is no longer raging.';\n\n\t\t\t//error and warning messages\n\t\t\tconst errorSelectBarbarian = 'Please select a single barbarian token.';\n\t\t\tconst errorNoRage = ' does not have any rage left, time for a long rest!';\n\t\t\tconst warnMacroNotFound = ' is not a valid macro name, please fix. Rage toggle successful but unable to alter macro.';\n\t\t\tconst errorSelectToken = 'Please select a token.';\n\t\t\tconst errorFailRevert = 'Failed to revert global melee weapon attack bonus, please check manually.';\n//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\n//main\n//check to see if Actor exists and is a barbarian\nif (macroActor !== undefined && macroActor !== null) {\n\n\t// get the barbarian class item\n\tbarb = macroActor.items.find(i => i.name === `${barbClassName}`);\n\tif (barb == undefined) {\n\t\tui.notifications.warn(`${errorSelectBarbarian}`);\n\t}\n\tif (barb !== undefined && barb !== null) {\n\t\tchatMsg = `${macroActor.name} + rageMsg`;\n\t\tlet enabled = false;\n\t\t// Store the state of the rage toggle flags that indicate if rage is active or not\n\t\tif (macroActor.data.flags.rageMacro !== null && macroActor.data.flags.rageMacro !== undefined) {\n\t\t\tenabled = true;\n\t\t\t\t// Store whether there is also a rage damage bonus currently active\n\t\t\t\tif (macroActor.data.flags.rageMacro[\"rageDmgAdded\"] == true) {\n\t\t\t\t\trageDmgAdded = true;\n\t\t\t\t}\n\t\t}\n\n\t\t//Calculate rage value for use in damage reversion and application\n\t\t// Determining the barbarian level\n\t\tlet barblvl = barb.data.data.levels;\n\n\t\t// Formula to determine the rage bonus damage depending on barbarian level\n\t\tlet lvlCorrection =  barblvl === 16 || barblvl === 17 ? 1 : 0;\n\t\tlet rageDmg = 2 + Math.floor(barblvl / 9) + lvlCorrection;\n\t\tlet dmg = JSON.parse(JSON.stringify(macroActor.data.data.bonuses.mwak.damage));\n\n\t\t// if rage is active, disable it\n\t\tif (enabled) {\n\t\t\tchatMsg = `${macroActor.name} ${endRageMsg}`;\n\t\t\t// reset resistances and melee weapon attack bonus\n\t\t\tlet obj = {};\n\t\t\tobj['flags.rageMacro'] = null;\n\t\t\t//revert damage resistances\n\t\t\tobj['data.traits.dr'] = macroActor.data.flags.rageMacro.oldResistances;\n\n\t\t\t//carefully revert rage global mwak damage bonus to original value, if that bonus is active\n\t\t\t//eventually want to add support so only last instance found is replaced.\n\t\t\tif(rageDmgAdded) {\n\t\t\t\tif (dmg == rageDmg || dmg == null || dmg == undefined || dmg == '' || dmg == 0){\n\t\t\t\t\tconsole.log('Removing simple rage damage');\n\t\t\t\t\tobj['data.bonuses.mwak.damage']='';\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Removing complex rage damage');\n\t\t\t\t\tlet patt = `\\\\s\\\\+\\\\s${rageDmg}($|[^0123456789dkrxcm(@{])`;\n\t\t\t\t\tlet result = dmg.search(patt);\n\t\t\t\t\tif (result !== -1) {\n\t\t\t\t\t\tlet len = ('' + rageDmg).length;\n\t\t\t\t\t\tlet origDmg = duplicate(dmg);\n\t\t\t\t\t\tlet firstHalfDmg = duplicate(dmg).substring(0,result);\n\t\t\t\t\t\t//Test String: 2d6 + 2 + 2d6\n\t\t\t\t\t\tlet lastHalfDmg = duplicate(dmg).substring(result+3+len, origDmg.length);\n\t\t\t\t\t\tdmg = `${firstHalfDmg}${lastHalfDmg}`;\n\t\t\t\t\t\tobj['data.bonuses.mwak.damage']=dmg;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tui.notifications.error(`${errorFailRevert}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmacroActor.update(obj);\n\n\t\t// if rage is disabled, enable it\n\t\t} else {\n\t\t\tif (deductResource) {\n\t\t\t\tlet hasAvailableResource = false;\n\t\t\t\tlet newResources = duplicate(macroActor.data.data.resources)\n\t\t\t\tlet obj = {}\n\t\t\t\t// Look for Resources under the Core macroActor data\n\t\t\t\tlet resourceKey = Object.keys(macroActor.data.data.resources).filter(k => macroActor.data.data.resources[k].label === `${rageResourceName}`).shift();\n\t\t\t\tif (resourceKey && (macroActor.data.data.resources[resourceKey].value > 0 || !preventNegativeResource)) {\n\t\t\t\t\thasAvailableResource = true;\n\t\t\t\t\tnewResources[resourceKey].value--;\n\t\t\t\t\tobj['data.resources'] = newResources \n\t\t\t\t\tmacroActor.update(obj);\n\t\t\t\t}\n\t\t\t\tif (!hasAvailableResource) {\n\t\t\t\t\tui.notifications.error(`${macroActor.name} ${errorNoRage}`);\n\t\t\t\t\tnoRage=true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//activate rage if there is rage available, or if it is okay to rage with 0 resources\n\t\t\tif (!noRage) {\n\t\t\t\tchatMsg = `${macroActor.name} ${rageMsg}`;\n\t\t\t\t// update resistance\n\t\t\t\tlet obj = {};\n\t\t\t\t// storing old resistances in flags to restore later\n\t\t\t\tobj['flags.rageMacro.enabled'] = true;\n\t\t\t\tobj['flags.rageMacro.oldResistances'] = JSON.parse(JSON.stringify(macroActor.data.data.traits.dr));\n\t\t\t\t// add bludgeoning, piercing and slashing resistance\n\t\t\t\tlet newResistance = duplicate(macroActor.data.data.traits.dr);\n\t\t\t\tif (newResistance.value.indexOf('bludgeoning') === -1) newResistance.value.push('bludgeoning');\n\t\t\t\tif (newResistance.value.indexOf('piercing') === -1) newResistance.value.push('piercing');\n\t\t\t\tif (newResistance.value.indexOf('slashing') === -1) newResistance.value.push('slashing');\n\t\t\t\t//If bear totem, add bear totem resistances.\n\t\t\t\tbear = macroActor.items.find(i => i.name === `${bearTotemFeatureName}`)\n\t\t\t\tif (bear !== undefined && bear!== null) {\n\t\t\t\t\tif (newResistance.value.indexOf('acid') === -1) newResistance.value.push('acid');\n\t\t\t\t\tif (newResistance.value.indexOf('cold') === -1) newResistance.value.push('cold');\n\t\t\t\t\tif (newResistance.value.indexOf('fire') === -1) newResistance.value.push('fire');\n\t\t\t\t\tif (newResistance.value.indexOf('force') === -1) newResistance.value.push('force');\n\t\t\t\t\tif (newResistance.value.indexOf('lightning') === -1) newResistance.value.push('lightning');\n\t\t\t\t\tif (newResistance.value.indexOf('necrotic') === -1) newResistance.value.push('necrotic');\n\t\t\t\t\tif (newResistance.value.indexOf('poison') === -1) newResistance.value.push('poison');\n\t\t\t\t\tif (newResistance.value.indexOf('radiant') === -1) newResistance.value.push('radiant');\n\t\t\t\t\tif (newResistance.value.indexOf('thunder') === -1) newResistance.value.push('thunder');\n\t\t\t\t}\n\t\t\t\tobj['data.traits.dr'] = newResistance;\n\t\t\t\tmacroActor.update(obj);\n\n\t\t\t\t// For Strength barbarians, update global melee weapon attack bonus to include rage bonus\n\t\t\t\tif (strAttacks) {\n\t\t\t\t\tobj['flags.rageMacro.rageDmgAdded'] = true;\n\t\t\t\t\t// Preserve old mwak damage bonus if there was one, just in case\n\t\t\t\t\tobj['flags.rageMacro.oldDmg'] = JSON.parse(JSON.stringify(dmg));\n\t\t\t\t\t//actually add the bonus rage damage to the previous bonus damage\n\t\t\t\t\t//respect roll formulas by doing string addition if value is already present.\n\t\t\t\t\tif (dmg == null || dmg == undefined || dmg == 0 || dmg == '') {\n\t\t\t\t\t\tconsole.log('Adding simple rage damage');\n\t\t\t\t\t\tobj['data.bonuses.mwak.damage'] = rageDmg;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.log('Adding complex rage damage');\n\t\t\t\t\t\tobj['data.bonuses.mwak.damage'] = `${dmg} + ${rageDmg}`;\n\t\t\t\t\t}\n\t\t\t\t\tmacroActor.update(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!noRage) {\n\t\t\t// toggle rage icon, if rage path is defined above\n\t\t\t(async () => { \n\t\t\t\ttoggleResult = await macroToken.toggleEffect(rageIconPath);\n\t\t\t\tif (toggleResult == enabled) macroToken.toggleEffect(rageIconPath);  \n\t\t\t})();\n\t\t\t\n\t\t\t//toggle macro icon and name, if macro name is correct and stop rage icon path is defined\n\t\t\tlet rageMacro = game.macros.getName(rageMacroName);\n\t\t\t\t//check for name of macro in its \"off\" form\n\t\t\t\tif (rageMacro == null || rageMacro == undefined) {\n\t\t\t\t\trageMacro = game.macros.getName('Stop ' + rageMacroName);\n\t\t\t\t}\n\t\t\tlet obj = {};\n\t\t\tif ( (rageMacro !== null && rageMacro !== undefined) && toggleMacro == true && \n\t\t\t\t\t+ (stopRageIconPath !== null && stopRageIconPath !== undefined && stopRageIconPath !== '') ) {\n\t\t\t\tif (enabled) {\n\t\t\t\t  obj['img'] = rageIconPath;\n\t\t\t\t  obj['name'] = rageMacroName;\n\t\t\t\t} else {\n\t\t\t\t  obj['img'] = stopRageIconPath;\n\t\t\t\t  obj['name'] = 'Stop ' + rageMacroName;\n\t\t\t\t}\n\t\t\t\trageMacro.update(obj);\n\t\t\t} else {\n\t\t\tif (toggleMacro == true) ui.notifications.warn(`${rageMacroName} ${warnMacroNotFound}`);\n\t\t\t}\n\t\t}\n\t}\n} else ui.notifications.warn(errorSelectToken);\n// write to chat if needed:\nif (chatMsg !== '') {\n\tlet chatData = {\n\t\tuser: game.user._id,\n\t\tspeaker: ChatMessage.getSpeaker(),\n\t\tcontent: chatMsg\n\t};\n\tChatMessage.create(chatData, {});\n}","folder":"76fmVesxjabFS6ZV","sort":3600001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"eD2rpXMTXTuo7Bh2","name":"Catharina Merchant Chatter","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"var NAME = \"Catharina Combat\";\nvar token = game.scenes.filter(x => x.active)[0].data.tokens.filter(x => {\n// console.error(x.name);\nif(x.name.toLowerCase().includes(NAME.toLowerCase().trim())){\n  return x;\n}\n})[0];\n// console.error(token.name);\ngame.npcChatter.tokenChatter(token);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"gqTixjEesmE5ljTk","name":"Ammunition Updater","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Ammunition Updater\n(() => {\n  if(canvas.tokens.controlled.length !== 1) return ui.notificiations.error(`Select 1 Token.`);\n\n  let target = canvas.tokens.controlled[0];\n  let items = target.actor.items;\n\n  let weapons = items.filter(i=>i.type === \"weapon\" && i.data.data.properties.amm);\n  let weapon_options = ``;\n  for(let weapon of weapons)\n  {\n    weapon_options += `<option value=\"${weapon.id}\">${weapon.name}</option>`;\n  }\n\n  let ammos = items.filter(i=>i.type === \"consumable\" && i.data.data.consumableType === \"ammo\");\n  let ammo_options = ``;\n  for(let ammo of ammos)\n  {\n    ammo_options += `<option value=\"${ammo.id}\">${ammo.name}</option>`;\n  }\n\n  let dialog_context = `\n    <p>Choose Options</p>\n    <div class =\"form-group\">\n      <label>Select Weapon</label>\n      <select id=\"weapon\" name=\"weapon\">\n        ${weapon_options}\n      </select>\n      <p></p>\n      <label>Select Ammunition</label>\n      <select id =\"ammo\" name =\"ammo\">\n        ${ammo_options}\n      </select>\n      <p></p>\n    </div>`;\n\n  new Dialog({\n    content : dialog_context,\n    buttons : {\n      one : {\n        icon :`<i class=\"fas fa-check\"></i>`,\n        label : \"Switch Ammo\",\n        callback : async (html) => {\n          let update_weapon = items.get(html.find('[name=weapon]')[0].value);\n          let old_ammo = items.get(update_weapon.data.data.consume.target);\n          let update_ammo = items.get(html.find('[name=ammo]')[0].value);\n          let update = {\n            _id : update_weapon._id,\n            data : { \n              consume : {\n                type : \"ammo\",\n                target : update_ammo.id,\n                amount : 1\n              },\n              attackBonus : (update_weapon.data.data.attackBonus + update_ammo.data.data.attackBonus - old_ammo.data.data.attackBonus),\n              damage :{\n                parts : [\n                  update_weapon.data.data.damage.parts[0],\n                  update_ammo.data.data.damage.parts[0]\n                ]\n              }\n            }\n          };\n          await target.actor.updateEmbeddedEntity(\"OwnedItem\",update);\n          display(`\n            <img src=${target.data.img} width=\"50\" height=\"50\">\n            <img src=${update_weapon.data.img} width=\"25\" height=\"25\">\n            =>\n            <img src=${update_ammo.data.img} width=\"25\" height=\"25\">\n            <p></p>\n            <table>\n              <tr>\n                <td>\n                  ${target.data.name} has changed his ammunition on ${update_weapon.name} to ${update_ammo.name}.\n                </td>\n              </tr>\n            </table>`);\n            //console.log(target,update_weapon,old_ammo,update_ammo,update);\n        }\n      }\n    }\n  }).render(true);\n})();\n\nfunction display(data = \"\")\n{\n  ChatMessage.create({\n    content : data\n  });\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":true}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"j8GFIcCmYNvtCzJg","name":"All Token’s Passive Perception","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/book.svg","scope":"global","command":"// Pull the passive perception of each token in the current scene and whisper the results to the GM.\n// Only tested with the 5e System in Foundry.\n// Author: @Drunemeton#7955. Based on the original macro by author @Erogroth#7134.\n\n// Initalize variables.\nlet pcArray = [];\nlet npcArray = [];\nlet messageContentPC = \"\";\nlet messageContentNPC = \"\";\nlet messageHeaderPC = \"<b>PC Passive Perception</b><br>\";\nlet messageHeaderNPC = \"<b>NPC Passive Perception</b><br>\";\n\n// Gather tokens in the current scene into an array.\nlet tokens = canvas.tokens.placeables.filter((token) => token.data);\n\n// From the tokens array sort into PC and NPC arrays.\nfor (let count of tokens) {\n  let tokenType = count.actor.data.type;\n  let tokenName = count.data.name;\n  let tokenPassive = count.actor.data.data.skills.prc.passive;\n  \n  if(tokenType === \"character\") {\n    pcArray.push({ name: tokenName, passive: tokenPassive });\n  } \n  if(tokenType === \"npc\") {\n    npcArray.push({ name: tokenName, passive: tokenPassive });\n  }\n}\n\n// Sort each array.\nsortArray(pcArray);\nsortArray(npcArray);\n\n// Build chat message, with PCs first, then NPCs.\nfor (let numPC of pcArray) {\n  messageContentPC += `${numPC.name}: <b>${numPC.passive}</b><br>`;\n}\nfor (let numNPC of npcArray) {\n  messageContentNPC += `${numNPC.name}: <b>${numNPC.passive}</b><br>`;\n}\n\nlet chatMessage = (messageHeaderPC + messageContentPC + `<br>` + messageHeaderNPC + messageContentNPC);\n\nlet chatData = {\n  user: game.user._id,\n  speaker: ChatMessage.getSpeaker(),\n  content: chatMessage,\n  whisper: game.users.entities.filter((u) => u.isGM).map((u) => u._id),\n};\n\n// Display chat message.\nChatMessage.create(chatData, {});\n\n// Sort each array by Name.\n  function sortArray(checkArray) {\n    checkArray.sort(function (a, b) {\n      var nameA = a.name.toUpperCase(); // ignore upper and lowercase\n      var nameB = b.name.toUpperCase(); // ignore upper and lowercase\n      if (nameA < nameB) {\n        return -1;\n      }\n      if (nameA > nameB) {\n        return 1;\n      }\n      // names must be equal\n      return 0;\n    });\n\n    // Sort array by Passive Perception.\n    checkArray.sort(function (a, b) {\n      return b.passive - a.passive;\n    });\n  }","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"keJfSTHb2bwesLTa","name":"Spirit Guardian","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Check if a token is selected. Warn user if not.\nif (token === undefined) {\n\tui.notifications.info(\"Please select a token first!\");\n\treturn false;\n}\n\n//Set owner to first owner of the token, if one doesn't exist, set to current user. Finally get the default colour of this user.\nlet owner = (Object.keys(token.actor.data.permission)[1]);\nif (owner === undefined) {\n\towner = game.user._id;\n}\n\n//Return grid size, this is used later to determine the center of a token.\nlet gridSize = (scene.data.grid);\n\n//Provide a switch to allow users to backout during the dialog process.\nlet proceed = 0;\n\n//Create new dialog which provides a means to colour the token and set radius.\nlet d = new Dialog({\n\ttitle: \"Spiritual Guardians\",\n\tcontent: `\n\t\t<p>Click to add aura or remove the aura</p>\n    `,\n\tbuttons: {\n\t\taddbutton: {\n\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\tlabel: \"Add\",\n\t\t\tcallback: () => proceed = 1\n\t\t},\n\t\tremovebutton: {\n\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\tlabel: \"Remove\",\n\t\t\tcallback: () => proceed = 2\n\t\t},\n\t\tcancelbutton: {\n\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\tlabel: \"Cancel\",\n\t\t\tcallback: () => proceed = 0\n\t\t}\n\t},\n\tdefault: \"Cancel\",\n\tclose: html => {\n\t\tif (proceed==1) {\n\t\t\tlet dist = 15; //Distance of the Aura\n\t\t\tcreateTemplate(dist);\n\t\t} else if (proceed==2){\n\t\t\tremoveTemplate()\n\t\t} else {\n\t\t\t//close window\n\t\t}\n\t}\n});\nd.render(true);\n\n\n//Create a Measured Template, to do so we require the radius distance (dist) and the colour (colour) set in the dialog. Here we multiply the grid size by the token size and finally half that value, we finally add the x and y coordinates to this so we ensure we are placing the aura directly in the middle of the token. We also use the shadeColor function to make the border 20% darker.\nasync function createTemplate(dist) {\n\n\tlet response = await MeasuredTemplate.create({\n\t\tt: \"circle\",\n\t\tuser: owner,\n\t\tx: token.data.x + 0.5 * (token.data.width * gridSize),\n\t\ty: token.data.y + 0.5 * (token.data.height * gridSize),\n\t\tdirection: 0,\n\t\tangle: 360,\n\t\tdistance: dist,\n\t\tborderColor: \"#000000\",\n\t\tfillColor: \"#000000\",\n        texture: \"\", //path to Texture file if needed\n        tmfxPreset: \"Fairy Fireflies : Excited\", //Effect name is shown in manual setup dialog\n        tmfxTint: 0xa5f3ea, \n        tmfxTextureAlpha: 0.2\n\t});\n\t\n\tawait tokenAttacher.attachElementToToken(response, token, true);\n}\n\nasync function removeTemplate() {\nconst all_attached = await tokenAttacher.getAllAttachedElementsOfToken(token);\nconst all_attached_tiles = await tokenAttacher.getAllAttachedElementsByTypeOfToken(token, \"MeasuredTemplate\");\n  for (var i = 0; i < all_attached_tiles.length; i++) {\n    canvas.templates.deleteMany(all_attached_tiles[i]);\n  }\n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"klnGEza3gmRTHucB","name":"FX On","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/eye.svg","scope":"global","command":"let updates = canvas.tiles.placeables.filter(t => t.data.flags.parallaxia).map\n(t => {\nreturn {\n_id: t.id,\n'flags.parallaxia.isTarget': true,\n}\n});\ncanvas.tiles.updateMany(updates)\n\nconst l = canvas.lighting.get('b5FkDZ6I1Rg9zZLv');\nl.update({hidden: false});\n\nconst tile = canvas.tiles.get('YwqAM5uOzxw1emZz');\ntile.update({hidden: true});","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.61s7JAGwBaaLNl5f"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"lrCGg9pxGXhDs2FP","name":"Toggle Hide (Fixed Value)","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Toggles hide using a fixed stealth value on selected tokens for systems that support it.  (Currently dnd5e only) (Currently dnd5e only)\nConditionalVisibility.toggleHide(canvas.tokens.controlled, prompt('Enter a stealth value for all selected tokens'))","folder":"76fmVesxjabFS6ZV","sort":100011,"flags":{},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"lykwgYnObCH0zT0v","name":"Convert Selected Tokens to Loot - Custom Damaged Items","type":"script","author":"a2um1mRnicEx282I","img":"icons/containers/bags/coinpouch-simple-leather-silver-brown.webp","scope":"global","command":"// This is the percent chance that a Common item will be damaged when a token is converted to loot. A damaged item has its value reduced and appends (Damaged) to the name. Set this to 0 if you want to disable damaged items.\nconst chanceOfDamagedItems = 0.25;\n\n// This multiplies the price of a damaged item by the given number, lowering its value.\nconst damagedItemsMultiplier = 0.25;\n\n// If set to true, this will remove items that are damaged from tokens that are converted to loot.\nconst removeDamagedItems = false;\n\nconst macroSupport = new game.dfreds.MacroSupport();\nmacroSupport.convertSelectedTokensToLoot(\n  chanceOfDamagedItems,\n  damagedItemsMultiplier,\n  removeDamagedItems\n);","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{"core":{"sourceId":"Macro.uXaOY2ziotAvxdrg"},"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"FRluk9qbsNFzsRoC":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"mJ3Ruf2qbiZYqHti","name":"Reroll Bad D20 With Modifiers","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"/**\n * Rolls a d20. If the roll is below a 3, it rerolls the value. Adds perception total + 1 as well.\n */\n\nlet dice = new Roll('1d20 + @skills.prc.total + 1').roll();\nif (dice.total <= (4 + actor.data.data.skills.prc.total)) dice.reroll();\ndice.toMessage();","folder":"76fmVesxjabFS6ZV","sort":4000001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"meNhLawYsZpC1qm6","name":"Random Mockeries","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Courtesy of @Zarek\n// Selected target receives a random mockery from a table called \"mockeries\" along with the DC and damage.\n// You can find a table called mockeries in the community tables module.\n\n\nlet tableName = \"Mockeries\";\n// default mockery if no table found.\nlet mockery = \"Now go away or I shall taunt you a second time-a!\";\n\nlet viciousMockeries = () => {\n  if (!actor) {\n    ui.notifications.warn(\"You must have an actor selected.\");\n    return\n  }\n\n  let actorLevels = actor.data.data.levels || 1;\n  let table = game.tables.entities.find(t => t.name == tableName);\n\n  // Get Targets name\n  const targetId = game.user.targets.ids[0];\n  const targetToken = canvas.tokens.get(targetId);\n  if (!targetToken) {\n    ui.notifications.warn(\"You must target a token.\");\n    return\n  }\n  const targetName = targetToken.name;\n\n  // Roll the result, and mark it drawn\n  if (table) {\n    if (checkTable(table)) {\n      let roll = table.roll();\n      let result = roll.results[0];\n      mockery = result.text;\n      table.updateEmbeddedEntity(\"TableResult\", {\n        _id: result._id,\n        drawn: true\n      });\n    }\n  }\n\n  function checkTable(table) {\n    let results = 0;\n    for (let data of table.data.results) {\n      if (!data.drawn) {\n        results++;\n      }\n    }\n    if (results < 1) {\n      table.reset();\n      ui.notifications.notify(\"Table Reset\")\n      return false\n    }\n    return true\n  }\n\n  // Add a message with damage roll\n  let numDie = 1;\n  if (actorLevels >= 17) {\n    numDie = 4;\n  } else if (actorLevels >= 11) {\n    numDie = 3;\n  } else if (actorLevels >= 5) {\n    numDie = 2;\n  }\n\n  let messageContent = `<p>${targetName} Roll WIS save DC [[8+${actor.data.data.abilities.cha.mod}+@attributes.prof]] or take [[${numDie}d4]] damage and have disadvantage.</p>`\n  messageContent += `<p>${token.name} exclaims <b><i>\"${mockery}\"</i></b></p>`\n  messageContent += `<details closed=\"\"><summary><a>Vicious Mockery</a></summary><p>You unleash a string of insults laced with subtle enchantments at a creature you can see within range. If the target can hear you (though it need not understand you), it must succeed on a <strong>Wisdom saving throw</strong> or take <strong>1d4 psychic damage</strong> and have <strong>disadvantage on the next attack roll</strong> it makes before the end of its next turn.</p>\n    <p>This spell’s damage increases by 1d4 when you reach 5th level ([[/r 2d4]]), 11th level ([[/r 3d4]]), and 17th level ([[/r 4d4]]).</p></details>`\n\n  // create the message\n  if (messageContent !== '') {\n    let chatData = {\n      user: game.user._id,\n      speaker: ChatMessage.getSpeaker(),\n      content: messageContent,\n    };\n    ChatMessage.create(chatData, {});\n  }\n};\n\nviciousMockeries();","folder":"76fmVesxjabFS6ZV","sort":3900001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"mvoUABvNUNo85n7E","name":"Global Chatter","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"game.npcChatter.globalChatter()","folder":"76fmVesxjabFS6ZV","sort":4700001,"flags":{},"ownership":{"default":0,"ANHn7Sw4w0uRlS0W":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"nRQRGzNUkT6dhRKY","name":"Show Aura","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Check if a token is selected. Warn user if not.\nif (token === undefined) {\n\tui.notifications.info(\"Please select a token first!\");\n\treturn false;\n}\n\n//Set owner to first owner of the token, if one doesn't exist, set to current user. Finally get the default colour of this user.\nlet owner = (Object.keys(token.actor.data.permission)[1]);\nif (owner === undefined) {\n\towner = game.user._id;\n}\nlet defaultColour = game.users.get(owner).data.color;\n\nconsole.log();\n//Return grid size, this is used later to determine the center of a token.\nlet gridSize = (scene.data.grid);\n\n//Provide a switch to allow users to backout during the dialog process.\nlet proceed = false;\n\n//Create new dialog which provides a means to colour the token and set radius.\nlet d = new Dialog({\n\ttitle: \"Aura Radius\",\n\tcontent: `\n\t\t<p>Set radius and colour of the aura. Note this only applies to one token!</p>\n\t\t<form>\n\t\t\t<input type=\"text\" name=\"dist\" data-dtype=\"Number\" value=\"10\" />\n\t\t\t<input style=\"width: 100%\" type=\"color\" name=\"colour\" value=\"` + defaultColour + `\" data-dtype=\"String\">\n\t\t</form>\n    `,\n\tbuttons: {\n\t\tsubmit: {\n\t\t\ticon: '<i class=\"fas fa-check\"></i>',\n\t\t\tlabel: \"Submit\",\n\t\t\tcallback: () => proceed = true\n\t\t},\n\t\tcancel: {\n\t\t\ticon: '<i class=\"fas fa-times\"></i>',\n\t\t\tlabel: \"Entfernen\",\n\t\t\tcallback: () => proceed = false\n\t\t}\n\t},\n\tdefault: \"Cancel\",\n\tclose: html => {\n\t\tif (proceed) {\n\t\t\tlet dist = html.find('[name=dist]')[0].value;\n\t\t\tlet colour = html.find('[name=colour]')[0].value;\n\t\t\tcreateTemplate(dist, colour);\n\t\t} else {\n\t\t\tremoveTemplate()\n\t\t}\n\t}\n});\nd.render(true);\n\n//Shade a HEX colour - thanks to Pablo/David Sherret from Stack Overflow for this code.\nfunction shadeColor(color, percent) {\n\tvar R = parseInt(color.substring(1, 3), 16);\n\tvar G = parseInt(color.substring(3, 5), 16);\n\tvar B = parseInt(color.substring(5, 7), 16);\n\tR = parseInt(R * (100 + percent) / 100);\n\tG = parseInt(G * (100 + percent) / 100);\n\tB = parseInt(B * (100 + percent) / 100);\n\tR = (R < 255) ? R : 255;\n\tG = (G < 255) ? G : 255;\n\tB = (B < 255) ? B : 255;\n\tvar RR = ((R.toString(16).length == 1) ? \"0\" + R.toString(16) : R.toString(16));\n\tvar GG = ((G.toString(16).length == 1) ? \"0\" + G.toString(16) : G.toString(16));\n\tvar BB = ((B.toString(16).length == 1) ? \"0\" + B.toString(16) : B.toString(16));\n\treturn \"#\" + RR + GG + BB;\n}\n\n//Create a Measured Template, to do so we require the radius distance (dist) and the colour (colour) set in the dialog. Here we multiply the grid size by the token size and finally half that value, we finally add the x and y coordinates to this so we ensure we are placing the aura directly in the middle of the token. We also use the shadeColor function to make the border 20% darker.\nasync function createTemplate(dist, colour) {\n\n\tlet response = await MeasuredTemplate.create({\n\t\tt: \"circle\",\n\t\tuser: owner,\n\t\tx: token.data.x + 0.5 * (token.data.width * gridSize),\n\t\ty: token.data.y + 0.5 * (token.data.height * gridSize),\n\t\tdirection: 0,\n\t\tangle: 360,\n\t\tdistance: dist,\n\t\tborderColor: shadeColor(colour, -20),\n\t\tfillColor: colour,\n                texture: \"modules/trigger-happy/images/transparent.png\",\n                tmfxPreset: \"Flames 4 (colorizable)\",\n                tmfxTint: 0xa5f3ea,\n                tmfxTextureAlpha: 0.6\n//modules/turnmarker/assets/believer.png\n\t});\n\n\taddFlags(response);\n}\n\nasync function removeTemplate() {\nconst all_attached = await tokenAttacher.getAllAttachedElementsOfToken(token);\nconst all_attached_tiles = await tokenAttacher.getAllAttachedElementsByTypeOfToken(token, \"MeasuredTemplate\");\nfor (var i = 0; i < all_attached_tiles.length; i++) {\n  canvas.templates.deleteMany(all_attached_tiles[i]);\n}\n//console.log(all_attached_tiles.length );\n//tokenAttacher.detachAllElementsFromToken(token,true);\n\n}\n\n//Finally we need to set the Token Mold flags to ensure this is stickied. This can be removed if Token Mold is not installed.\nasync function addFlags(response) {\n\nawait tokenAttacher.attachElementToToken(response, token, true);\n                        \n}","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"pvjk6mOCiyc1VJAs","name":"Toggle Invisible","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"//Toggles selected tokens invisible\nConditionalVisibility.toggleCondition(canvas.tokens.controlled, 'invisible', true)","folder":"76fmVesxjabFS6ZV","sort":5200001,"flags":{},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"q0r2FL4YiZOBJJLI","name":"Show Toolbox","type":"script","author":"a2um1mRnicEx282I","img":"modules/data-toolbox/icons/toolbox.png","scope":"global","command":"dtShowToolbox();","folder":"76fmVesxjabFS6ZV","sort":5000001,"flags":{"combat-utility-belt":{"macroTrigger":""}},"ownership":{"default":0,"FgnRmbsZ0zuxNbBw":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"sMe41pmxwZHhVfiD","name":"New Macro","type":"chat","author":"XKhHN1g0i24DVtty","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":"76fmVesxjabFS6ZV","sort":0,"flags":{},"ownership":{"default":0,"XKhHN1g0i24DVtty":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"tgtohHObVeTSglpg","name":"TM - Super Spooky Glow","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/combat.svg","scope":"global","command":"// https://www.reddit.com/r/FoundryVTT/comments/jl5npj/macro_help_request_attaching_sfx_to_spells_or/\nlet params =\n[{\nfilterType: \"glow\",\nfilterId: \"superSpookyGlow\",\nouterStrength: 4,\ninnerStrength: 0,\ncolor: 0x5099DD,\nquality: 0.5,\npadding: 10,\nanimated:\n    {\n        color: \n        {\n           active: true, \n           loopDuration: 3000, \n           animType: \"colorOscillation\", \n           val1:0x5099DD, \n           val2:0x90EEFF\n        }\n    }\n}];\n\nTokenMagic.addUpdateFiltersOnSelected(params);","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"combat-utility-belt":{"macroTrigger":""},"furnace":{"runAsGM":false}},"ownership":{"default":0,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"wEjEKGwEdhkEMQX5","name":"FX Off","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/blind.svg","scope":"global","command":"let updates = canvas.tiles.placeables.filter(t => t.data.flags.parallaxia).map\n(t => {\nreturn {\n_id: t.id,\n'flags.parallaxia.isTarget': false,\n}\n});\ncanvas.tiles.updateMany(updates)\n\n\nconst l = canvas.lighting.get('b5FkDZ6I1Rg9zZLv');\nl.update({hidden: true});\n\nconst x = canvas.tiles.get('YwqAM5uOzxw1emZz');\nx.update({hidden: false});","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.ndNFroLggjLUevta"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"wcb8j614fLIbMQPs","name":"Show Tokens Resistances","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Prints the condition immunities, damage immunities, damage resistances and damage vulnerabilities of the currently selected token(s).\n// Damage types that appeared in the previous chat message (e.g. due to a roll) are highlighted in red. \n// A DM can call this macro after a player rolled damage to quickly see if they need to apply full, half or double damage.\n//\n// Author: https://github.com/Nijin22\n// Licence: MIT, see https://choosealicense.com/licenses/mit/\n\nconst damageTypes = [\"Acid\", \"Bludgeoning\", \"Cold\", \"Fire\", \"Force\", \"Lightning\", \"Necrotic\", \"Piercing\", \"Non-Magical Physical\",\n                     \"Piercing\", \"Poison\", \"Psychic\", \"Radiant\", \"Slashing\", \"Thunder\",\n                     \"Bludgeoning, Piercing, and Slashing from Nonmagical Attacks\"];\n\nlet msg = \"\";\nlet previousMessage;\ntry { \n    previousMessage = game.messages.entries[game.messages.entries.length-1].data.content;\n} catch (e) {\n    // No previous message in log. Default to an empty string.\n    previousMessage = \"\";\n}\n\n// Enable case-insensitive replacements\n// Source: https://stackoverflow.com/a/7313467\nString.prototype.replaceAllCaseInsensitive = function(strReplace, strWith) {\n    // See http://stackoverflow.com/a/3561711/556609\n    var esc = strReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    var reg = new RegExp(esc, 'ig');\n    return this.replace(reg, strWith);\n};\n\n\n// Get traits\nconst traits = new Map();\ntraits.set(\"ci\", \"Condition Immunities\");\ntraits.set(\"di\", \"Damage Immunities (No damage)\");\ntraits.set(\"dr\", \"Damage Resistances (Half damage)\");\ntraits.set(\"dv\", \"Damage Vulnerabilities (Double dmg)\");\ncanvas.tokens.controlled.forEach(token => {\n    let name = token.actor.name;\n    msg += `<h2>${name}</h2>`;\n    \n    traits.forEach((traitDescr, traitId, map) => {\n        // Clone 'default' 5e trait array\n        var allTraits = [...token.actor.data.data.traits[traitId].value];\n        \n        // Custom traits\n        allTraits = allTraits.concat(token.actor.data.data.traits[traitId].custom.split(\";\").map(x => x.trim()));\n        \n        var printableTraits = allTraits.join(\"; \");\n        if (printableTraits.length == 0) {\n            printableTraits = \"-\";\n        }\n        msg += `<h3>${traitDescr}</h3><p>${printableTraits}</p>`;\n    });\n});\n\n// highlight words from previous message\nlet damageTypesOfPrevousMsg = [];\ndamageTypes.forEach(damageType => {\n    if (previousMessage.toLowerCase().indexOf(damageType.toLowerCase()) != -1){\n        damageTypesOfPrevousMsg.push(damageType);\n    }\n});\ndamageTypesOfPrevousMsg.forEach(damageType => {\n    msg = msg.replaceAllCaseInsensitive(damageType, `<span style=\"color:red; font-weight: bold;\">${damageType}</span>`);\n});\n\n\nif (msg.length === 0) {\n    msg = \"No tokens selected.\";\n}\n\nui.notifications.info(msg);\n\n// Post message to self\n/*ChatMessage.create({\n    content: msg,\n    whisper: [game.user._id]\n});*/","folder":"76fmVesxjabFS6ZV","sort":4300001,"flags":{"core":{"sourceId":"Macro.4WhSSiHXlbcvP7f6"}},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"y9kfnJwZlH4xzC0H","name":"Random Cutting Words","type":"script","author":"a2um1mRnicEx282I","img":"icons/svg/dice-target.svg","scope":"global","command":"// Courtesy of @Zarek\n// Selected target receives a random cutting word from a table called \"Mockeries\" along with the roll reduction.\n// You can find a mockeries table in the community table module.\n\nlet cuttingWords = () => {\n  // Setup variables\n  let tableName = \"Mockeries\";\n  let mockery = \"Now go away or I shall taunt you a second time-a!\"; // if table can't be found, use this.\n\n  if (!actor) {\n    ui.notifications.warn(\"You must have an actor selected.\");\n    return\n  }\n  \n  let actorLevels = actor.data.data.levels || 1;\n  let table = game.tables.entities.find(t => t.name == tableName);\n  // Get Targets name\n  const targetId = game.user.targets.ids[0];\n  const targetToken = canvas.tokens.get(targetId);\n  if (!targetToken) {\n    ui.notifications.warn(\"You must target a token.\");\n    return\n  }\n  const targetName = targetToken.name;\n\n  // Roll the result, and mark it drawn\n  if (table) {\n    if (checkTable(table)) {\n      let roll = table.roll();\n      let result = roll.results[0];\n      mockery = result.text;\n      table.updateEmbeddedEntity(\"TableResult\", {\n        _id: result._id,\n        drawn: true\n      });\n    }\n  }\n\n  function checkTable(table) {\n    let results = 0;\n    for (let data of table.data.results) {\n      if (!data.drawn) {\n        results++;\n      }\n    }\n    if (results < 1) {\n      table.reset();\n      ui.notifications.notify(\"Table Reset\")\n      return false\n    }\n    return true\n  }\n\n  let dieType = 'd6';\n  if (actorLevels >= 15) {\n    dieType = 'd12';\n  } else if (actorLevels >= 10) {\n    dieType = 'd10';\n  } else if (actorLevels >= 5) {\n    dieType = 'd8';\n  }\n\n  let messageContent = `<p>${targetName} Reduce your roll by: <b>[[1${dieType}]]</b>.</p>`\n  messageContent += `<p>${token.name} exclaims <b><i>\"${mockery}\"</i></b></p>`\n  messageContent += `<details closed=\"\"><summary><a>Cutting Words</a></summary>\n  <p>When a creature that you can see within 60 feet of you makes an <b>Attack roll, an ability check, or a damage roll</b>, you can use your <b>Reaction</b> to expend one of your uses of <b>Bardic Inspiration</b>,\n  rolling a Bardic Inspiration die and subtracting the number rolled from the creature’s roll.</p>\n  <p>You can choose to use this feature after the creature makes its roll, but before the GM determines whether the Attack roll or ability check succeeds or fails, or before the creature deals its damage. \n  The creature is immune if it can’t hear you or if it’s immune to being <b>Charmed</b>.</p></details>`\n\n  // create the message\n  if (messageContent !== '') {\n    let chatData = {\n      user: game.user._id,\n      speaker: ChatMessage.getSpeaker(),\n      content: messageContent,\n    };\n    ChatMessage.create(chatData, {});\n  }\n};\n\ncuttingWords();","folder":"76fmVesxjabFS6ZV","sort":3700001,"flags":{},"ownership":{"default":0,"y5gmtwxmW3A5ZuOP":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
{"_id":"yfhT7UmjfQlAYnwx","name":"Play \"She Lives\"","type":"script","author":"a2um1mRnicEx282I","img":"external_scenes/myTokens/porvenir/tokens/UltraMimicBrain-Token-4x4.png","scope":"global","command":"(async function() {\n    for ( let p of game.playlists ) {\n        await p.stopAll();\n    }\n    const playlist = game.playlists.getName(\"The Secret of the Porvenir\");\n    const sound = playlist.sounds.find(s => s.name === \"She Lives Loop\");\n    playlist.updateEmbeddedEntity(\"PlaylistSound\", {_id: sound._id, playing: true});\n})();","folder":"76fmVesxjabFS6ZV","sort":100001,"flags":{"core":{"sourceId":"Macro.Qi2OGDyjXK3oz1CJ"}},"ownership":{"default":0,"X2FU4EYTKyUpwF0o":3,"a2um1mRnicEx282I":3},"_stats":{"systemId":null,"systemVersion":null,"coreVersion":null,"createdTime":null,"modifiedTime":null,"lastModifiedBy":null}}
